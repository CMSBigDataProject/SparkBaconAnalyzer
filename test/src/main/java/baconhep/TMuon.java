/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package baconhep;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TMuon extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TMuon\",\"namespace\":\"baconhep\",\"fields\":[{\"name\":\"pt\",\"type\":\"float\"},{\"name\":\"eta\",\"type\":\"float\"},{\"name\":\"phi\",\"type\":\"float\"},{\"name\":\"ptErr\",\"type\":\"float\"},{\"name\":\"staPt\",\"type\":\"float\"},{\"name\":\"staEta\",\"type\":\"float\"},{\"name\":\"staPhi\",\"type\":\"float\"},{\"name\":\"pfPt\",\"type\":\"float\"},{\"name\":\"pfEta\",\"type\":\"float\"},{\"name\":\"pfPhi\",\"type\":\"float\"},{\"name\":\"trkIso\",\"type\":\"float\"},{\"name\":\"ecalIso\",\"type\":\"float\"},{\"name\":\"hcalIso\",\"type\":\"float\"},{\"name\":\"chHadIso\",\"type\":\"float\"},{\"name\":\"gammaIso\",\"type\":\"float\"},{\"name\":\"neuHadIso\",\"type\":\"float\"},{\"name\":\"puIso\",\"type\":\"float\"},{\"name\":\"puppiChHadIso\",\"type\":\"float\"},{\"name\":\"puppiGammaIso\",\"type\":\"float\"},{\"name\":\"puppiNeuHadIso\",\"type\":\"float\"},{\"name\":\"puppiChHadIsoNoLep\",\"type\":\"float\"},{\"name\":\"puppiGammaIsoNoLep\",\"type\":\"float\"},{\"name\":\"puppiNeuHadIsoNoLep\",\"type\":\"float\"},{\"name\":\"d0\",\"type\":\"float\"},{\"name\":\"dz\",\"type\":\"float\"},{\"name\":\"sip3d\",\"type\":\"float\"},{\"name\":\"tkNchi2\",\"type\":\"float\"},{\"name\":\"muNchi2\",\"type\":\"float\"},{\"name\":\"trkKink\",\"type\":\"float\"},{\"name\":\"glbKink\",\"type\":\"float\"},{\"name\":\"trkHitFrac\",\"type\":\"float\"},{\"name\":\"chi2LocPos\",\"type\":\"float\"},{\"name\":\"segComp\",\"type\":\"float\"},{\"name\":\"caloComp\",\"type\":\"float\"},{\"name\":\"q\",\"type\":\"int\"},{\"name\":\"nValidHits\",\"type\":\"int\"},{\"name\":\"typeBits\",\"type\":\"long\"},{\"name\":\"selectorBits\",\"type\":\"long\"},{\"name\":\"pogIDBits\",\"type\":\"long\"},{\"name\":\"nTkHits\",\"type\":\"long\"},{\"name\":\"nPixHits\",\"type\":\"long\"},{\"name\":\"nTkLayers\",\"type\":\"long\"},{\"name\":\"nPixLayers\",\"type\":\"long\"},{\"name\":\"nMatchStn\",\"type\":\"long\"},{\"name\":\"trkID\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public float pt;
  @Deprecated public float eta;
  @Deprecated public float phi;
  @Deprecated public float ptErr;
  @Deprecated public float staPt;
  @Deprecated public float staEta;
  @Deprecated public float staPhi;
  @Deprecated public float pfPt;
  @Deprecated public float pfEta;
  @Deprecated public float pfPhi;
  @Deprecated public float trkIso;
  @Deprecated public float ecalIso;
  @Deprecated public float hcalIso;
  @Deprecated public float chHadIso;
  @Deprecated public float gammaIso;
  @Deprecated public float neuHadIso;
  @Deprecated public float puIso;
  @Deprecated public float puppiChHadIso;
  @Deprecated public float puppiGammaIso;
  @Deprecated public float puppiNeuHadIso;
  @Deprecated public float puppiChHadIsoNoLep;
  @Deprecated public float puppiGammaIsoNoLep;
  @Deprecated public float puppiNeuHadIsoNoLep;
  @Deprecated public float d0;
  @Deprecated public float dz;
  @Deprecated public float sip3d;
  @Deprecated public float tkNchi2;
  @Deprecated public float muNchi2;
  @Deprecated public float trkKink;
  @Deprecated public float glbKink;
  @Deprecated public float trkHitFrac;
  @Deprecated public float chi2LocPos;
  @Deprecated public float segComp;
  @Deprecated public float caloComp;
  @Deprecated public int q;
  @Deprecated public int nValidHits;
  @Deprecated public long typeBits;
  @Deprecated public long selectorBits;
  @Deprecated public long pogIDBits;
  @Deprecated public long nTkHits;
  @Deprecated public long nPixHits;
  @Deprecated public long nTkLayers;
  @Deprecated public long nPixLayers;
  @Deprecated public long nMatchStn;
  @Deprecated public int trkID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TMuon() {}

  /**
   * All-args constructor.
   */
  public TMuon(java.lang.Float pt, java.lang.Float eta, java.lang.Float phi, java.lang.Float ptErr, java.lang.Float staPt, java.lang.Float staEta, java.lang.Float staPhi, java.lang.Float pfPt, java.lang.Float pfEta, java.lang.Float pfPhi, java.lang.Float trkIso, java.lang.Float ecalIso, java.lang.Float hcalIso, java.lang.Float chHadIso, java.lang.Float gammaIso, java.lang.Float neuHadIso, java.lang.Float puIso, java.lang.Float puppiChHadIso, java.lang.Float puppiGammaIso, java.lang.Float puppiNeuHadIso, java.lang.Float puppiChHadIsoNoLep, java.lang.Float puppiGammaIsoNoLep, java.lang.Float puppiNeuHadIsoNoLep, java.lang.Float d0, java.lang.Float dz, java.lang.Float sip3d, java.lang.Float tkNchi2, java.lang.Float muNchi2, java.lang.Float trkKink, java.lang.Float glbKink, java.lang.Float trkHitFrac, java.lang.Float chi2LocPos, java.lang.Float segComp, java.lang.Float caloComp, java.lang.Integer q, java.lang.Integer nValidHits, java.lang.Long typeBits, java.lang.Long selectorBits, java.lang.Long pogIDBits, java.lang.Long nTkHits, java.lang.Long nPixHits, java.lang.Long nTkLayers, java.lang.Long nPixLayers, java.lang.Long nMatchStn, java.lang.Integer trkID) {
    this.pt = pt;
    this.eta = eta;
    this.phi = phi;
    this.ptErr = ptErr;
    this.staPt = staPt;
    this.staEta = staEta;
    this.staPhi = staPhi;
    this.pfPt = pfPt;
    this.pfEta = pfEta;
    this.pfPhi = pfPhi;
    this.trkIso = trkIso;
    this.ecalIso = ecalIso;
    this.hcalIso = hcalIso;
    this.chHadIso = chHadIso;
    this.gammaIso = gammaIso;
    this.neuHadIso = neuHadIso;
    this.puIso = puIso;
    this.puppiChHadIso = puppiChHadIso;
    this.puppiGammaIso = puppiGammaIso;
    this.puppiNeuHadIso = puppiNeuHadIso;
    this.puppiChHadIsoNoLep = puppiChHadIsoNoLep;
    this.puppiGammaIsoNoLep = puppiGammaIsoNoLep;
    this.puppiNeuHadIsoNoLep = puppiNeuHadIsoNoLep;
    this.d0 = d0;
    this.dz = dz;
    this.sip3d = sip3d;
    this.tkNchi2 = tkNchi2;
    this.muNchi2 = muNchi2;
    this.trkKink = trkKink;
    this.glbKink = glbKink;
    this.trkHitFrac = trkHitFrac;
    this.chi2LocPos = chi2LocPos;
    this.segComp = segComp;
    this.caloComp = caloComp;
    this.q = q;
    this.nValidHits = nValidHits;
    this.typeBits = typeBits;
    this.selectorBits = selectorBits;
    this.pogIDBits = pogIDBits;
    this.nTkHits = nTkHits;
    this.nPixHits = nPixHits;
    this.nTkLayers = nTkLayers;
    this.nPixLayers = nPixLayers;
    this.nMatchStn = nMatchStn;
    this.trkID = trkID;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pt;
    case 1: return eta;
    case 2: return phi;
    case 3: return ptErr;
    case 4: return staPt;
    case 5: return staEta;
    case 6: return staPhi;
    case 7: return pfPt;
    case 8: return pfEta;
    case 9: return pfPhi;
    case 10: return trkIso;
    case 11: return ecalIso;
    case 12: return hcalIso;
    case 13: return chHadIso;
    case 14: return gammaIso;
    case 15: return neuHadIso;
    case 16: return puIso;
    case 17: return puppiChHadIso;
    case 18: return puppiGammaIso;
    case 19: return puppiNeuHadIso;
    case 20: return puppiChHadIsoNoLep;
    case 21: return puppiGammaIsoNoLep;
    case 22: return puppiNeuHadIsoNoLep;
    case 23: return d0;
    case 24: return dz;
    case 25: return sip3d;
    case 26: return tkNchi2;
    case 27: return muNchi2;
    case 28: return trkKink;
    case 29: return glbKink;
    case 30: return trkHitFrac;
    case 31: return chi2LocPos;
    case 32: return segComp;
    case 33: return caloComp;
    case 34: return q;
    case 35: return nValidHits;
    case 36: return typeBits;
    case 37: return selectorBits;
    case 38: return pogIDBits;
    case 39: return nTkHits;
    case 40: return nPixHits;
    case 41: return nTkLayers;
    case 42: return nPixLayers;
    case 43: return nMatchStn;
    case 44: return trkID;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pt = (java.lang.Float)value$; break;
    case 1: eta = (java.lang.Float)value$; break;
    case 2: phi = (java.lang.Float)value$; break;
    case 3: ptErr = (java.lang.Float)value$; break;
    case 4: staPt = (java.lang.Float)value$; break;
    case 5: staEta = (java.lang.Float)value$; break;
    case 6: staPhi = (java.lang.Float)value$; break;
    case 7: pfPt = (java.lang.Float)value$; break;
    case 8: pfEta = (java.lang.Float)value$; break;
    case 9: pfPhi = (java.lang.Float)value$; break;
    case 10: trkIso = (java.lang.Float)value$; break;
    case 11: ecalIso = (java.lang.Float)value$; break;
    case 12: hcalIso = (java.lang.Float)value$; break;
    case 13: chHadIso = (java.lang.Float)value$; break;
    case 14: gammaIso = (java.lang.Float)value$; break;
    case 15: neuHadIso = (java.lang.Float)value$; break;
    case 16: puIso = (java.lang.Float)value$; break;
    case 17: puppiChHadIso = (java.lang.Float)value$; break;
    case 18: puppiGammaIso = (java.lang.Float)value$; break;
    case 19: puppiNeuHadIso = (java.lang.Float)value$; break;
    case 20: puppiChHadIsoNoLep = (java.lang.Float)value$; break;
    case 21: puppiGammaIsoNoLep = (java.lang.Float)value$; break;
    case 22: puppiNeuHadIsoNoLep = (java.lang.Float)value$; break;
    case 23: d0 = (java.lang.Float)value$; break;
    case 24: dz = (java.lang.Float)value$; break;
    case 25: sip3d = (java.lang.Float)value$; break;
    case 26: tkNchi2 = (java.lang.Float)value$; break;
    case 27: muNchi2 = (java.lang.Float)value$; break;
    case 28: trkKink = (java.lang.Float)value$; break;
    case 29: glbKink = (java.lang.Float)value$; break;
    case 30: trkHitFrac = (java.lang.Float)value$; break;
    case 31: chi2LocPos = (java.lang.Float)value$; break;
    case 32: segComp = (java.lang.Float)value$; break;
    case 33: caloComp = (java.lang.Float)value$; break;
    case 34: q = (java.lang.Integer)value$; break;
    case 35: nValidHits = (java.lang.Integer)value$; break;
    case 36: typeBits = (java.lang.Long)value$; break;
    case 37: selectorBits = (java.lang.Long)value$; break;
    case 38: pogIDBits = (java.lang.Long)value$; break;
    case 39: nTkHits = (java.lang.Long)value$; break;
    case 40: nPixHits = (java.lang.Long)value$; break;
    case 41: nTkLayers = (java.lang.Long)value$; break;
    case 42: nPixLayers = (java.lang.Long)value$; break;
    case 43: nMatchStn = (java.lang.Long)value$; break;
    case 44: trkID = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pt' field.
   */
  public java.lang.Float getPt() {
    return pt;
  }

  /**
   * Sets the value of the 'pt' field.
   * @param value the value to set.
   */
  public void setPt(java.lang.Float value) {
    this.pt = value;
  }

  /**
   * Gets the value of the 'eta' field.
   */
  public java.lang.Float getEta() {
    return eta;
  }

  /**
   * Sets the value of the 'eta' field.
   * @param value the value to set.
   */
  public void setEta(java.lang.Float value) {
    this.eta = value;
  }

  /**
   * Gets the value of the 'phi' field.
   */
  public java.lang.Float getPhi() {
    return phi;
  }

  /**
   * Sets the value of the 'phi' field.
   * @param value the value to set.
   */
  public void setPhi(java.lang.Float value) {
    this.phi = value;
  }

  /**
   * Gets the value of the 'ptErr' field.
   */
  public java.lang.Float getPtErr() {
    return ptErr;
  }

  /**
   * Sets the value of the 'ptErr' field.
   * @param value the value to set.
   */
  public void setPtErr(java.lang.Float value) {
    this.ptErr = value;
  }

  /**
   * Gets the value of the 'staPt' field.
   */
  public java.lang.Float getStaPt() {
    return staPt;
  }

  /**
   * Sets the value of the 'staPt' field.
   * @param value the value to set.
   */
  public void setStaPt(java.lang.Float value) {
    this.staPt = value;
  }

  /**
   * Gets the value of the 'staEta' field.
   */
  public java.lang.Float getStaEta() {
    return staEta;
  }

  /**
   * Sets the value of the 'staEta' field.
   * @param value the value to set.
   */
  public void setStaEta(java.lang.Float value) {
    this.staEta = value;
  }

  /**
   * Gets the value of the 'staPhi' field.
   */
  public java.lang.Float getStaPhi() {
    return staPhi;
  }

  /**
   * Sets the value of the 'staPhi' field.
   * @param value the value to set.
   */
  public void setStaPhi(java.lang.Float value) {
    this.staPhi = value;
  }

  /**
   * Gets the value of the 'pfPt' field.
   */
  public java.lang.Float getPfPt() {
    return pfPt;
  }

  /**
   * Sets the value of the 'pfPt' field.
   * @param value the value to set.
   */
  public void setPfPt(java.lang.Float value) {
    this.pfPt = value;
  }

  /**
   * Gets the value of the 'pfEta' field.
   */
  public java.lang.Float getPfEta() {
    return pfEta;
  }

  /**
   * Sets the value of the 'pfEta' field.
   * @param value the value to set.
   */
  public void setPfEta(java.lang.Float value) {
    this.pfEta = value;
  }

  /**
   * Gets the value of the 'pfPhi' field.
   */
  public java.lang.Float getPfPhi() {
    return pfPhi;
  }

  /**
   * Sets the value of the 'pfPhi' field.
   * @param value the value to set.
   */
  public void setPfPhi(java.lang.Float value) {
    this.pfPhi = value;
  }

  /**
   * Gets the value of the 'trkIso' field.
   */
  public java.lang.Float getTrkIso() {
    return trkIso;
  }

  /**
   * Sets the value of the 'trkIso' field.
   * @param value the value to set.
   */
  public void setTrkIso(java.lang.Float value) {
    this.trkIso = value;
  }

  /**
   * Gets the value of the 'ecalIso' field.
   */
  public java.lang.Float getEcalIso() {
    return ecalIso;
  }

  /**
   * Sets the value of the 'ecalIso' field.
   * @param value the value to set.
   */
  public void setEcalIso(java.lang.Float value) {
    this.ecalIso = value;
  }

  /**
   * Gets the value of the 'hcalIso' field.
   */
  public java.lang.Float getHcalIso() {
    return hcalIso;
  }

  /**
   * Sets the value of the 'hcalIso' field.
   * @param value the value to set.
   */
  public void setHcalIso(java.lang.Float value) {
    this.hcalIso = value;
  }

  /**
   * Gets the value of the 'chHadIso' field.
   */
  public java.lang.Float getChHadIso() {
    return chHadIso;
  }

  /**
   * Sets the value of the 'chHadIso' field.
   * @param value the value to set.
   */
  public void setChHadIso(java.lang.Float value) {
    this.chHadIso = value;
  }

  /**
   * Gets the value of the 'gammaIso' field.
   */
  public java.lang.Float getGammaIso() {
    return gammaIso;
  }

  /**
   * Sets the value of the 'gammaIso' field.
   * @param value the value to set.
   */
  public void setGammaIso(java.lang.Float value) {
    this.gammaIso = value;
  }

  /**
   * Gets the value of the 'neuHadIso' field.
   */
  public java.lang.Float getNeuHadIso() {
    return neuHadIso;
  }

  /**
   * Sets the value of the 'neuHadIso' field.
   * @param value the value to set.
   */
  public void setNeuHadIso(java.lang.Float value) {
    this.neuHadIso = value;
  }

  /**
   * Gets the value of the 'puIso' field.
   */
  public java.lang.Float getPuIso() {
    return puIso;
  }

  /**
   * Sets the value of the 'puIso' field.
   * @param value the value to set.
   */
  public void setPuIso(java.lang.Float value) {
    this.puIso = value;
  }

  /**
   * Gets the value of the 'puppiChHadIso' field.
   */
  public java.lang.Float getPuppiChHadIso() {
    return puppiChHadIso;
  }

  /**
   * Sets the value of the 'puppiChHadIso' field.
   * @param value the value to set.
   */
  public void setPuppiChHadIso(java.lang.Float value) {
    this.puppiChHadIso = value;
  }

  /**
   * Gets the value of the 'puppiGammaIso' field.
   */
  public java.lang.Float getPuppiGammaIso() {
    return puppiGammaIso;
  }

  /**
   * Sets the value of the 'puppiGammaIso' field.
   * @param value the value to set.
   */
  public void setPuppiGammaIso(java.lang.Float value) {
    this.puppiGammaIso = value;
  }

  /**
   * Gets the value of the 'puppiNeuHadIso' field.
   */
  public java.lang.Float getPuppiNeuHadIso() {
    return puppiNeuHadIso;
  }

  /**
   * Sets the value of the 'puppiNeuHadIso' field.
   * @param value the value to set.
   */
  public void setPuppiNeuHadIso(java.lang.Float value) {
    this.puppiNeuHadIso = value;
  }

  /**
   * Gets the value of the 'puppiChHadIsoNoLep' field.
   */
  public java.lang.Float getPuppiChHadIsoNoLep() {
    return puppiChHadIsoNoLep;
  }

  /**
   * Sets the value of the 'puppiChHadIsoNoLep' field.
   * @param value the value to set.
   */
  public void setPuppiChHadIsoNoLep(java.lang.Float value) {
    this.puppiChHadIsoNoLep = value;
  }

  /**
   * Gets the value of the 'puppiGammaIsoNoLep' field.
   */
  public java.lang.Float getPuppiGammaIsoNoLep() {
    return puppiGammaIsoNoLep;
  }

  /**
   * Sets the value of the 'puppiGammaIsoNoLep' field.
   * @param value the value to set.
   */
  public void setPuppiGammaIsoNoLep(java.lang.Float value) {
    this.puppiGammaIsoNoLep = value;
  }

  /**
   * Gets the value of the 'puppiNeuHadIsoNoLep' field.
   */
  public java.lang.Float getPuppiNeuHadIsoNoLep() {
    return puppiNeuHadIsoNoLep;
  }

  /**
   * Sets the value of the 'puppiNeuHadIsoNoLep' field.
   * @param value the value to set.
   */
  public void setPuppiNeuHadIsoNoLep(java.lang.Float value) {
    this.puppiNeuHadIsoNoLep = value;
  }

  /**
   * Gets the value of the 'd0' field.
   */
  public java.lang.Float getD0() {
    return d0;
  }

  /**
   * Sets the value of the 'd0' field.
   * @param value the value to set.
   */
  public void setD0(java.lang.Float value) {
    this.d0 = value;
  }

  /**
   * Gets the value of the 'dz' field.
   */
  public java.lang.Float getDz() {
    return dz;
  }

  /**
   * Sets the value of the 'dz' field.
   * @param value the value to set.
   */
  public void setDz(java.lang.Float value) {
    this.dz = value;
  }

  /**
   * Gets the value of the 'sip3d' field.
   */
  public java.lang.Float getSip3d() {
    return sip3d;
  }

  /**
   * Sets the value of the 'sip3d' field.
   * @param value the value to set.
   */
  public void setSip3d(java.lang.Float value) {
    this.sip3d = value;
  }

  /**
   * Gets the value of the 'tkNchi2' field.
   */
  public java.lang.Float getTkNchi2() {
    return tkNchi2;
  }

  /**
   * Sets the value of the 'tkNchi2' field.
   * @param value the value to set.
   */
  public void setTkNchi2(java.lang.Float value) {
    this.tkNchi2 = value;
  }

  /**
   * Gets the value of the 'muNchi2' field.
   */
  public java.lang.Float getMuNchi2() {
    return muNchi2;
  }

  /**
   * Sets the value of the 'muNchi2' field.
   * @param value the value to set.
   */
  public void setMuNchi2(java.lang.Float value) {
    this.muNchi2 = value;
  }

  /**
   * Gets the value of the 'trkKink' field.
   */
  public java.lang.Float getTrkKink() {
    return trkKink;
  }

  /**
   * Sets the value of the 'trkKink' field.
   * @param value the value to set.
   */
  public void setTrkKink(java.lang.Float value) {
    this.trkKink = value;
  }

  /**
   * Gets the value of the 'glbKink' field.
   */
  public java.lang.Float getGlbKink() {
    return glbKink;
  }

  /**
   * Sets the value of the 'glbKink' field.
   * @param value the value to set.
   */
  public void setGlbKink(java.lang.Float value) {
    this.glbKink = value;
  }

  /**
   * Gets the value of the 'trkHitFrac' field.
   */
  public java.lang.Float getTrkHitFrac() {
    return trkHitFrac;
  }

  /**
   * Sets the value of the 'trkHitFrac' field.
   * @param value the value to set.
   */
  public void setTrkHitFrac(java.lang.Float value) {
    this.trkHitFrac = value;
  }

  /**
   * Gets the value of the 'chi2LocPos' field.
   */
  public java.lang.Float getChi2LocPos() {
    return chi2LocPos;
  }

  /**
   * Sets the value of the 'chi2LocPos' field.
   * @param value the value to set.
   */
  public void setChi2LocPos(java.lang.Float value) {
    this.chi2LocPos = value;
  }

  /**
   * Gets the value of the 'segComp' field.
   */
  public java.lang.Float getSegComp() {
    return segComp;
  }

  /**
   * Sets the value of the 'segComp' field.
   * @param value the value to set.
   */
  public void setSegComp(java.lang.Float value) {
    this.segComp = value;
  }

  /**
   * Gets the value of the 'caloComp' field.
   */
  public java.lang.Float getCaloComp() {
    return caloComp;
  }

  /**
   * Sets the value of the 'caloComp' field.
   * @param value the value to set.
   */
  public void setCaloComp(java.lang.Float value) {
    this.caloComp = value;
  }

  /**
   * Gets the value of the 'q' field.
   */
  public java.lang.Integer getQ() {
    return q;
  }

  /**
   * Sets the value of the 'q' field.
   * @param value the value to set.
   */
  public void setQ(java.lang.Integer value) {
    this.q = value;
  }

  /**
   * Gets the value of the 'nValidHits' field.
   */
  public java.lang.Integer getNValidHits() {
    return nValidHits;
  }

  /**
   * Sets the value of the 'nValidHits' field.
   * @param value the value to set.
   */
  public void setNValidHits(java.lang.Integer value) {
    this.nValidHits = value;
  }

  /**
   * Gets the value of the 'typeBits' field.
   */
  public java.lang.Long getTypeBits() {
    return typeBits;
  }

  /**
   * Sets the value of the 'typeBits' field.
   * @param value the value to set.
   */
  public void setTypeBits(java.lang.Long value) {
    this.typeBits = value;
  }

  /**
   * Gets the value of the 'selectorBits' field.
   */
  public java.lang.Long getSelectorBits() {
    return selectorBits;
  }

  /**
   * Sets the value of the 'selectorBits' field.
   * @param value the value to set.
   */
  public void setSelectorBits(java.lang.Long value) {
    this.selectorBits = value;
  }

  /**
   * Gets the value of the 'pogIDBits' field.
   */
  public java.lang.Long getPogIDBits() {
    return pogIDBits;
  }

  /**
   * Sets the value of the 'pogIDBits' field.
   * @param value the value to set.
   */
  public void setPogIDBits(java.lang.Long value) {
    this.pogIDBits = value;
  }

  /**
   * Gets the value of the 'nTkHits' field.
   */
  public java.lang.Long getNTkHits() {
    return nTkHits;
  }

  /**
   * Sets the value of the 'nTkHits' field.
   * @param value the value to set.
   */
  public void setNTkHits(java.lang.Long value) {
    this.nTkHits = value;
  }

  /**
   * Gets the value of the 'nPixHits' field.
   */
  public java.lang.Long getNPixHits() {
    return nPixHits;
  }

  /**
   * Sets the value of the 'nPixHits' field.
   * @param value the value to set.
   */
  public void setNPixHits(java.lang.Long value) {
    this.nPixHits = value;
  }

  /**
   * Gets the value of the 'nTkLayers' field.
   */
  public java.lang.Long getNTkLayers() {
    return nTkLayers;
  }

  /**
   * Sets the value of the 'nTkLayers' field.
   * @param value the value to set.
   */
  public void setNTkLayers(java.lang.Long value) {
    this.nTkLayers = value;
  }

  /**
   * Gets the value of the 'nPixLayers' field.
   */
  public java.lang.Long getNPixLayers() {
    return nPixLayers;
  }

  /**
   * Sets the value of the 'nPixLayers' field.
   * @param value the value to set.
   */
  public void setNPixLayers(java.lang.Long value) {
    this.nPixLayers = value;
  }

  /**
   * Gets the value of the 'nMatchStn' field.
   */
  public java.lang.Long getNMatchStn() {
    return nMatchStn;
  }

  /**
   * Sets the value of the 'nMatchStn' field.
   * @param value the value to set.
   */
  public void setNMatchStn(java.lang.Long value) {
    this.nMatchStn = value;
  }

  /**
   * Gets the value of the 'trkID' field.
   */
  public java.lang.Integer getTrkID() {
    return trkID;
  }

  /**
   * Sets the value of the 'trkID' field.
   * @param value the value to set.
   */
  public void setTrkID(java.lang.Integer value) {
    this.trkID = value;
  }

  /** Creates a new TMuon RecordBuilder */
  public static baconhep.TMuon.Builder newBuilder() {
    return new baconhep.TMuon.Builder();
  }
  
  /** Creates a new TMuon RecordBuilder by copying an existing Builder */
  public static baconhep.TMuon.Builder newBuilder(baconhep.TMuon.Builder other) {
    return new baconhep.TMuon.Builder(other);
  }
  
  /** Creates a new TMuon RecordBuilder by copying an existing TMuon instance */
  public static baconhep.TMuon.Builder newBuilder(baconhep.TMuon other) {
    return new baconhep.TMuon.Builder(other);
  }
  
  /**
   * RecordBuilder for TMuon instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TMuon>
    implements org.apache.avro.data.RecordBuilder<TMuon> {

    private float pt;
    private float eta;
    private float phi;
    private float ptErr;
    private float staPt;
    private float staEta;
    private float staPhi;
    private float pfPt;
    private float pfEta;
    private float pfPhi;
    private float trkIso;
    private float ecalIso;
    private float hcalIso;
    private float chHadIso;
    private float gammaIso;
    private float neuHadIso;
    private float puIso;
    private float puppiChHadIso;
    private float puppiGammaIso;
    private float puppiNeuHadIso;
    private float puppiChHadIsoNoLep;
    private float puppiGammaIsoNoLep;
    private float puppiNeuHadIsoNoLep;
    private float d0;
    private float dz;
    private float sip3d;
    private float tkNchi2;
    private float muNchi2;
    private float trkKink;
    private float glbKink;
    private float trkHitFrac;
    private float chi2LocPos;
    private float segComp;
    private float caloComp;
    private int q;
    private int nValidHits;
    private long typeBits;
    private long selectorBits;
    private long pogIDBits;
    private long nTkHits;
    private long nPixHits;
    private long nTkLayers;
    private long nPixLayers;
    private long nMatchStn;
    private int trkID;

    /** Creates a new Builder */
    private Builder() {
      super(baconhep.TMuon.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(baconhep.TMuon.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pt)) {
        this.pt = data().deepCopy(fields()[0].schema(), other.pt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eta)) {
        this.eta = data().deepCopy(fields()[1].schema(), other.eta);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phi)) {
        this.phi = data().deepCopy(fields()[2].schema(), other.phi);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ptErr)) {
        this.ptErr = data().deepCopy(fields()[3].schema(), other.ptErr);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.staPt)) {
        this.staPt = data().deepCopy(fields()[4].schema(), other.staPt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.staEta)) {
        this.staEta = data().deepCopy(fields()[5].schema(), other.staEta);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.staPhi)) {
        this.staPhi = data().deepCopy(fields()[6].schema(), other.staPhi);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pfPt)) {
        this.pfPt = data().deepCopy(fields()[7].schema(), other.pfPt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pfEta)) {
        this.pfEta = data().deepCopy(fields()[8].schema(), other.pfEta);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pfPhi)) {
        this.pfPhi = data().deepCopy(fields()[9].schema(), other.pfPhi);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.trkIso)) {
        this.trkIso = data().deepCopy(fields()[10].schema(), other.trkIso);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ecalIso)) {
        this.ecalIso = data().deepCopy(fields()[11].schema(), other.ecalIso);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hcalIso)) {
        this.hcalIso = data().deepCopy(fields()[12].schema(), other.hcalIso);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.chHadIso)) {
        this.chHadIso = data().deepCopy(fields()[13].schema(), other.chHadIso);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.gammaIso)) {
        this.gammaIso = data().deepCopy(fields()[14].schema(), other.gammaIso);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.neuHadIso)) {
        this.neuHadIso = data().deepCopy(fields()[15].schema(), other.neuHadIso);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.puIso)) {
        this.puIso = data().deepCopy(fields()[16].schema(), other.puIso);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.puppiChHadIso)) {
        this.puppiChHadIso = data().deepCopy(fields()[17].schema(), other.puppiChHadIso);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.puppiGammaIso)) {
        this.puppiGammaIso = data().deepCopy(fields()[18].schema(), other.puppiGammaIso);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.puppiNeuHadIso)) {
        this.puppiNeuHadIso = data().deepCopy(fields()[19].schema(), other.puppiNeuHadIso);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.puppiChHadIsoNoLep)) {
        this.puppiChHadIsoNoLep = data().deepCopy(fields()[20].schema(), other.puppiChHadIsoNoLep);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.puppiGammaIsoNoLep)) {
        this.puppiGammaIsoNoLep = data().deepCopy(fields()[21].schema(), other.puppiGammaIsoNoLep);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.puppiNeuHadIsoNoLep)) {
        this.puppiNeuHadIsoNoLep = data().deepCopy(fields()[22].schema(), other.puppiNeuHadIsoNoLep);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.d0)) {
        this.d0 = data().deepCopy(fields()[23].schema(), other.d0);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.dz)) {
        this.dz = data().deepCopy(fields()[24].schema(), other.dz);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.sip3d)) {
        this.sip3d = data().deepCopy(fields()[25].schema(), other.sip3d);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.tkNchi2)) {
        this.tkNchi2 = data().deepCopy(fields()[26].schema(), other.tkNchi2);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.muNchi2)) {
        this.muNchi2 = data().deepCopy(fields()[27].schema(), other.muNchi2);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.trkKink)) {
        this.trkKink = data().deepCopy(fields()[28].schema(), other.trkKink);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.glbKink)) {
        this.glbKink = data().deepCopy(fields()[29].schema(), other.glbKink);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.trkHitFrac)) {
        this.trkHitFrac = data().deepCopy(fields()[30].schema(), other.trkHitFrac);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.chi2LocPos)) {
        this.chi2LocPos = data().deepCopy(fields()[31].schema(), other.chi2LocPos);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.segComp)) {
        this.segComp = data().deepCopy(fields()[32].schema(), other.segComp);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.caloComp)) {
        this.caloComp = data().deepCopy(fields()[33].schema(), other.caloComp);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.q)) {
        this.q = data().deepCopy(fields()[34].schema(), other.q);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.nValidHits)) {
        this.nValidHits = data().deepCopy(fields()[35].schema(), other.nValidHits);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.typeBits)) {
        this.typeBits = data().deepCopy(fields()[36].schema(), other.typeBits);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.selectorBits)) {
        this.selectorBits = data().deepCopy(fields()[37].schema(), other.selectorBits);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pogIDBits)) {
        this.pogIDBits = data().deepCopy(fields()[38].schema(), other.pogIDBits);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.nTkHits)) {
        this.nTkHits = data().deepCopy(fields()[39].schema(), other.nTkHits);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.nPixHits)) {
        this.nPixHits = data().deepCopy(fields()[40].schema(), other.nPixHits);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.nTkLayers)) {
        this.nTkLayers = data().deepCopy(fields()[41].schema(), other.nTkLayers);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.nPixLayers)) {
        this.nPixLayers = data().deepCopy(fields()[42].schema(), other.nPixLayers);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.nMatchStn)) {
        this.nMatchStn = data().deepCopy(fields()[43].schema(), other.nMatchStn);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.trkID)) {
        this.trkID = data().deepCopy(fields()[44].schema(), other.trkID);
        fieldSetFlags()[44] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TMuon instance */
    private Builder(baconhep.TMuon other) {
            super(baconhep.TMuon.SCHEMA$);
      if (isValidValue(fields()[0], other.pt)) {
        this.pt = data().deepCopy(fields()[0].schema(), other.pt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eta)) {
        this.eta = data().deepCopy(fields()[1].schema(), other.eta);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phi)) {
        this.phi = data().deepCopy(fields()[2].schema(), other.phi);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ptErr)) {
        this.ptErr = data().deepCopy(fields()[3].schema(), other.ptErr);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.staPt)) {
        this.staPt = data().deepCopy(fields()[4].schema(), other.staPt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.staEta)) {
        this.staEta = data().deepCopy(fields()[5].schema(), other.staEta);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.staPhi)) {
        this.staPhi = data().deepCopy(fields()[6].schema(), other.staPhi);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pfPt)) {
        this.pfPt = data().deepCopy(fields()[7].schema(), other.pfPt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pfEta)) {
        this.pfEta = data().deepCopy(fields()[8].schema(), other.pfEta);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pfPhi)) {
        this.pfPhi = data().deepCopy(fields()[9].schema(), other.pfPhi);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.trkIso)) {
        this.trkIso = data().deepCopy(fields()[10].schema(), other.trkIso);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ecalIso)) {
        this.ecalIso = data().deepCopy(fields()[11].schema(), other.ecalIso);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hcalIso)) {
        this.hcalIso = data().deepCopy(fields()[12].schema(), other.hcalIso);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.chHadIso)) {
        this.chHadIso = data().deepCopy(fields()[13].schema(), other.chHadIso);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.gammaIso)) {
        this.gammaIso = data().deepCopy(fields()[14].schema(), other.gammaIso);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.neuHadIso)) {
        this.neuHadIso = data().deepCopy(fields()[15].schema(), other.neuHadIso);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.puIso)) {
        this.puIso = data().deepCopy(fields()[16].schema(), other.puIso);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.puppiChHadIso)) {
        this.puppiChHadIso = data().deepCopy(fields()[17].schema(), other.puppiChHadIso);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.puppiGammaIso)) {
        this.puppiGammaIso = data().deepCopy(fields()[18].schema(), other.puppiGammaIso);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.puppiNeuHadIso)) {
        this.puppiNeuHadIso = data().deepCopy(fields()[19].schema(), other.puppiNeuHadIso);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.puppiChHadIsoNoLep)) {
        this.puppiChHadIsoNoLep = data().deepCopy(fields()[20].schema(), other.puppiChHadIsoNoLep);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.puppiGammaIsoNoLep)) {
        this.puppiGammaIsoNoLep = data().deepCopy(fields()[21].schema(), other.puppiGammaIsoNoLep);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.puppiNeuHadIsoNoLep)) {
        this.puppiNeuHadIsoNoLep = data().deepCopy(fields()[22].schema(), other.puppiNeuHadIsoNoLep);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.d0)) {
        this.d0 = data().deepCopy(fields()[23].schema(), other.d0);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.dz)) {
        this.dz = data().deepCopy(fields()[24].schema(), other.dz);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.sip3d)) {
        this.sip3d = data().deepCopy(fields()[25].schema(), other.sip3d);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.tkNchi2)) {
        this.tkNchi2 = data().deepCopy(fields()[26].schema(), other.tkNchi2);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.muNchi2)) {
        this.muNchi2 = data().deepCopy(fields()[27].schema(), other.muNchi2);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.trkKink)) {
        this.trkKink = data().deepCopy(fields()[28].schema(), other.trkKink);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.glbKink)) {
        this.glbKink = data().deepCopy(fields()[29].schema(), other.glbKink);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.trkHitFrac)) {
        this.trkHitFrac = data().deepCopy(fields()[30].schema(), other.trkHitFrac);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.chi2LocPos)) {
        this.chi2LocPos = data().deepCopy(fields()[31].schema(), other.chi2LocPos);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.segComp)) {
        this.segComp = data().deepCopy(fields()[32].schema(), other.segComp);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.caloComp)) {
        this.caloComp = data().deepCopy(fields()[33].schema(), other.caloComp);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.q)) {
        this.q = data().deepCopy(fields()[34].schema(), other.q);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.nValidHits)) {
        this.nValidHits = data().deepCopy(fields()[35].schema(), other.nValidHits);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.typeBits)) {
        this.typeBits = data().deepCopy(fields()[36].schema(), other.typeBits);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.selectorBits)) {
        this.selectorBits = data().deepCopy(fields()[37].schema(), other.selectorBits);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pogIDBits)) {
        this.pogIDBits = data().deepCopy(fields()[38].schema(), other.pogIDBits);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.nTkHits)) {
        this.nTkHits = data().deepCopy(fields()[39].schema(), other.nTkHits);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.nPixHits)) {
        this.nPixHits = data().deepCopy(fields()[40].schema(), other.nPixHits);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.nTkLayers)) {
        this.nTkLayers = data().deepCopy(fields()[41].schema(), other.nTkLayers);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.nPixLayers)) {
        this.nPixLayers = data().deepCopy(fields()[42].schema(), other.nPixLayers);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.nMatchStn)) {
        this.nMatchStn = data().deepCopy(fields()[43].schema(), other.nMatchStn);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.trkID)) {
        this.trkID = data().deepCopy(fields()[44].schema(), other.trkID);
        fieldSetFlags()[44] = true;
      }
    }

    /** Gets the value of the 'pt' field */
    public java.lang.Float getPt() {
      return pt;
    }
    
    /** Sets the value of the 'pt' field */
    public baconhep.TMuon.Builder setPt(float value) {
      validate(fields()[0], value);
      this.pt = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'pt' field has been set */
    public boolean hasPt() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'pt' field */
    public baconhep.TMuon.Builder clearPt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eta' field */
    public java.lang.Float getEta() {
      return eta;
    }
    
    /** Sets the value of the 'eta' field */
    public baconhep.TMuon.Builder setEta(float value) {
      validate(fields()[1], value);
      this.eta = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eta' field has been set */
    public boolean hasEta() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eta' field */
    public baconhep.TMuon.Builder clearEta() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'phi' field */
    public java.lang.Float getPhi() {
      return phi;
    }
    
    /** Sets the value of the 'phi' field */
    public baconhep.TMuon.Builder setPhi(float value) {
      validate(fields()[2], value);
      this.phi = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'phi' field has been set */
    public boolean hasPhi() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'phi' field */
    public baconhep.TMuon.Builder clearPhi() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'ptErr' field */
    public java.lang.Float getPtErr() {
      return ptErr;
    }
    
    /** Sets the value of the 'ptErr' field */
    public baconhep.TMuon.Builder setPtErr(float value) {
      validate(fields()[3], value);
      this.ptErr = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'ptErr' field has been set */
    public boolean hasPtErr() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'ptErr' field */
    public baconhep.TMuon.Builder clearPtErr() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'staPt' field */
    public java.lang.Float getStaPt() {
      return staPt;
    }
    
    /** Sets the value of the 'staPt' field */
    public baconhep.TMuon.Builder setStaPt(float value) {
      validate(fields()[4], value);
      this.staPt = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'staPt' field has been set */
    public boolean hasStaPt() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'staPt' field */
    public baconhep.TMuon.Builder clearStaPt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'staEta' field */
    public java.lang.Float getStaEta() {
      return staEta;
    }
    
    /** Sets the value of the 'staEta' field */
    public baconhep.TMuon.Builder setStaEta(float value) {
      validate(fields()[5], value);
      this.staEta = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'staEta' field has been set */
    public boolean hasStaEta() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'staEta' field */
    public baconhep.TMuon.Builder clearStaEta() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'staPhi' field */
    public java.lang.Float getStaPhi() {
      return staPhi;
    }
    
    /** Sets the value of the 'staPhi' field */
    public baconhep.TMuon.Builder setStaPhi(float value) {
      validate(fields()[6], value);
      this.staPhi = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'staPhi' field has been set */
    public boolean hasStaPhi() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'staPhi' field */
    public baconhep.TMuon.Builder clearStaPhi() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pfPt' field */
    public java.lang.Float getPfPt() {
      return pfPt;
    }
    
    /** Sets the value of the 'pfPt' field */
    public baconhep.TMuon.Builder setPfPt(float value) {
      validate(fields()[7], value);
      this.pfPt = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pfPt' field has been set */
    public boolean hasPfPt() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pfPt' field */
    public baconhep.TMuon.Builder clearPfPt() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'pfEta' field */
    public java.lang.Float getPfEta() {
      return pfEta;
    }
    
    /** Sets the value of the 'pfEta' field */
    public baconhep.TMuon.Builder setPfEta(float value) {
      validate(fields()[8], value);
      this.pfEta = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'pfEta' field has been set */
    public boolean hasPfEta() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'pfEta' field */
    public baconhep.TMuon.Builder clearPfEta() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'pfPhi' field */
    public java.lang.Float getPfPhi() {
      return pfPhi;
    }
    
    /** Sets the value of the 'pfPhi' field */
    public baconhep.TMuon.Builder setPfPhi(float value) {
      validate(fields()[9], value);
      this.pfPhi = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'pfPhi' field has been set */
    public boolean hasPfPhi() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'pfPhi' field */
    public baconhep.TMuon.Builder clearPfPhi() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'trkIso' field */
    public java.lang.Float getTrkIso() {
      return trkIso;
    }
    
    /** Sets the value of the 'trkIso' field */
    public baconhep.TMuon.Builder setTrkIso(float value) {
      validate(fields()[10], value);
      this.trkIso = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'trkIso' field has been set */
    public boolean hasTrkIso() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'trkIso' field */
    public baconhep.TMuon.Builder clearTrkIso() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'ecalIso' field */
    public java.lang.Float getEcalIso() {
      return ecalIso;
    }
    
    /** Sets the value of the 'ecalIso' field */
    public baconhep.TMuon.Builder setEcalIso(float value) {
      validate(fields()[11], value);
      this.ecalIso = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'ecalIso' field has been set */
    public boolean hasEcalIso() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'ecalIso' field */
    public baconhep.TMuon.Builder clearEcalIso() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'hcalIso' field */
    public java.lang.Float getHcalIso() {
      return hcalIso;
    }
    
    /** Sets the value of the 'hcalIso' field */
    public baconhep.TMuon.Builder setHcalIso(float value) {
      validate(fields()[12], value);
      this.hcalIso = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'hcalIso' field has been set */
    public boolean hasHcalIso() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'hcalIso' field */
    public baconhep.TMuon.Builder clearHcalIso() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'chHadIso' field */
    public java.lang.Float getChHadIso() {
      return chHadIso;
    }
    
    /** Sets the value of the 'chHadIso' field */
    public baconhep.TMuon.Builder setChHadIso(float value) {
      validate(fields()[13], value);
      this.chHadIso = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'chHadIso' field has been set */
    public boolean hasChHadIso() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'chHadIso' field */
    public baconhep.TMuon.Builder clearChHadIso() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'gammaIso' field */
    public java.lang.Float getGammaIso() {
      return gammaIso;
    }
    
    /** Sets the value of the 'gammaIso' field */
    public baconhep.TMuon.Builder setGammaIso(float value) {
      validate(fields()[14], value);
      this.gammaIso = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'gammaIso' field has been set */
    public boolean hasGammaIso() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'gammaIso' field */
    public baconhep.TMuon.Builder clearGammaIso() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'neuHadIso' field */
    public java.lang.Float getNeuHadIso() {
      return neuHadIso;
    }
    
    /** Sets the value of the 'neuHadIso' field */
    public baconhep.TMuon.Builder setNeuHadIso(float value) {
      validate(fields()[15], value);
      this.neuHadIso = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'neuHadIso' field has been set */
    public boolean hasNeuHadIso() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'neuHadIso' field */
    public baconhep.TMuon.Builder clearNeuHadIso() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'puIso' field */
    public java.lang.Float getPuIso() {
      return puIso;
    }
    
    /** Sets the value of the 'puIso' field */
    public baconhep.TMuon.Builder setPuIso(float value) {
      validate(fields()[16], value);
      this.puIso = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'puIso' field has been set */
    public boolean hasPuIso() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'puIso' field */
    public baconhep.TMuon.Builder clearPuIso() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'puppiChHadIso' field */
    public java.lang.Float getPuppiChHadIso() {
      return puppiChHadIso;
    }
    
    /** Sets the value of the 'puppiChHadIso' field */
    public baconhep.TMuon.Builder setPuppiChHadIso(float value) {
      validate(fields()[17], value);
      this.puppiChHadIso = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiChHadIso' field has been set */
    public boolean hasPuppiChHadIso() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'puppiChHadIso' field */
    public baconhep.TMuon.Builder clearPuppiChHadIso() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'puppiGammaIso' field */
    public java.lang.Float getPuppiGammaIso() {
      return puppiGammaIso;
    }
    
    /** Sets the value of the 'puppiGammaIso' field */
    public baconhep.TMuon.Builder setPuppiGammaIso(float value) {
      validate(fields()[18], value);
      this.puppiGammaIso = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiGammaIso' field has been set */
    public boolean hasPuppiGammaIso() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'puppiGammaIso' field */
    public baconhep.TMuon.Builder clearPuppiGammaIso() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'puppiNeuHadIso' field */
    public java.lang.Float getPuppiNeuHadIso() {
      return puppiNeuHadIso;
    }
    
    /** Sets the value of the 'puppiNeuHadIso' field */
    public baconhep.TMuon.Builder setPuppiNeuHadIso(float value) {
      validate(fields()[19], value);
      this.puppiNeuHadIso = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiNeuHadIso' field has been set */
    public boolean hasPuppiNeuHadIso() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'puppiNeuHadIso' field */
    public baconhep.TMuon.Builder clearPuppiNeuHadIso() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'puppiChHadIsoNoLep' field */
    public java.lang.Float getPuppiChHadIsoNoLep() {
      return puppiChHadIsoNoLep;
    }
    
    /** Sets the value of the 'puppiChHadIsoNoLep' field */
    public baconhep.TMuon.Builder setPuppiChHadIsoNoLep(float value) {
      validate(fields()[20], value);
      this.puppiChHadIsoNoLep = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiChHadIsoNoLep' field has been set */
    public boolean hasPuppiChHadIsoNoLep() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'puppiChHadIsoNoLep' field */
    public baconhep.TMuon.Builder clearPuppiChHadIsoNoLep() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'puppiGammaIsoNoLep' field */
    public java.lang.Float getPuppiGammaIsoNoLep() {
      return puppiGammaIsoNoLep;
    }
    
    /** Sets the value of the 'puppiGammaIsoNoLep' field */
    public baconhep.TMuon.Builder setPuppiGammaIsoNoLep(float value) {
      validate(fields()[21], value);
      this.puppiGammaIsoNoLep = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiGammaIsoNoLep' field has been set */
    public boolean hasPuppiGammaIsoNoLep() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'puppiGammaIsoNoLep' field */
    public baconhep.TMuon.Builder clearPuppiGammaIsoNoLep() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'puppiNeuHadIsoNoLep' field */
    public java.lang.Float getPuppiNeuHadIsoNoLep() {
      return puppiNeuHadIsoNoLep;
    }
    
    /** Sets the value of the 'puppiNeuHadIsoNoLep' field */
    public baconhep.TMuon.Builder setPuppiNeuHadIsoNoLep(float value) {
      validate(fields()[22], value);
      this.puppiNeuHadIsoNoLep = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'puppiNeuHadIsoNoLep' field has been set */
    public boolean hasPuppiNeuHadIsoNoLep() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'puppiNeuHadIsoNoLep' field */
    public baconhep.TMuon.Builder clearPuppiNeuHadIsoNoLep() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'd0' field */
    public java.lang.Float getD0() {
      return d0;
    }
    
    /** Sets the value of the 'd0' field */
    public baconhep.TMuon.Builder setD0(float value) {
      validate(fields()[23], value);
      this.d0 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'd0' field has been set */
    public boolean hasD0() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'd0' field */
    public baconhep.TMuon.Builder clearD0() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'dz' field */
    public java.lang.Float getDz() {
      return dz;
    }
    
    /** Sets the value of the 'dz' field */
    public baconhep.TMuon.Builder setDz(float value) {
      validate(fields()[24], value);
      this.dz = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'dz' field has been set */
    public boolean hasDz() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'dz' field */
    public baconhep.TMuon.Builder clearDz() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'sip3d' field */
    public java.lang.Float getSip3d() {
      return sip3d;
    }
    
    /** Sets the value of the 'sip3d' field */
    public baconhep.TMuon.Builder setSip3d(float value) {
      validate(fields()[25], value);
      this.sip3d = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'sip3d' field has been set */
    public boolean hasSip3d() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'sip3d' field */
    public baconhep.TMuon.Builder clearSip3d() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'tkNchi2' field */
    public java.lang.Float getTkNchi2() {
      return tkNchi2;
    }
    
    /** Sets the value of the 'tkNchi2' field */
    public baconhep.TMuon.Builder setTkNchi2(float value) {
      validate(fields()[26], value);
      this.tkNchi2 = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'tkNchi2' field has been set */
    public boolean hasTkNchi2() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'tkNchi2' field */
    public baconhep.TMuon.Builder clearTkNchi2() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'muNchi2' field */
    public java.lang.Float getMuNchi2() {
      return muNchi2;
    }
    
    /** Sets the value of the 'muNchi2' field */
    public baconhep.TMuon.Builder setMuNchi2(float value) {
      validate(fields()[27], value);
      this.muNchi2 = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'muNchi2' field has been set */
    public boolean hasMuNchi2() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'muNchi2' field */
    public baconhep.TMuon.Builder clearMuNchi2() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'trkKink' field */
    public java.lang.Float getTrkKink() {
      return trkKink;
    }
    
    /** Sets the value of the 'trkKink' field */
    public baconhep.TMuon.Builder setTrkKink(float value) {
      validate(fields()[28], value);
      this.trkKink = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'trkKink' field has been set */
    public boolean hasTrkKink() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'trkKink' field */
    public baconhep.TMuon.Builder clearTrkKink() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'glbKink' field */
    public java.lang.Float getGlbKink() {
      return glbKink;
    }
    
    /** Sets the value of the 'glbKink' field */
    public baconhep.TMuon.Builder setGlbKink(float value) {
      validate(fields()[29], value);
      this.glbKink = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'glbKink' field has been set */
    public boolean hasGlbKink() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'glbKink' field */
    public baconhep.TMuon.Builder clearGlbKink() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'trkHitFrac' field */
    public java.lang.Float getTrkHitFrac() {
      return trkHitFrac;
    }
    
    /** Sets the value of the 'trkHitFrac' field */
    public baconhep.TMuon.Builder setTrkHitFrac(float value) {
      validate(fields()[30], value);
      this.trkHitFrac = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'trkHitFrac' field has been set */
    public boolean hasTrkHitFrac() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'trkHitFrac' field */
    public baconhep.TMuon.Builder clearTrkHitFrac() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'chi2LocPos' field */
    public java.lang.Float getChi2LocPos() {
      return chi2LocPos;
    }
    
    /** Sets the value of the 'chi2LocPos' field */
    public baconhep.TMuon.Builder setChi2LocPos(float value) {
      validate(fields()[31], value);
      this.chi2LocPos = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'chi2LocPos' field has been set */
    public boolean hasChi2LocPos() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'chi2LocPos' field */
    public baconhep.TMuon.Builder clearChi2LocPos() {
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'segComp' field */
    public java.lang.Float getSegComp() {
      return segComp;
    }
    
    /** Sets the value of the 'segComp' field */
    public baconhep.TMuon.Builder setSegComp(float value) {
      validate(fields()[32], value);
      this.segComp = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'segComp' field has been set */
    public boolean hasSegComp() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'segComp' field */
    public baconhep.TMuon.Builder clearSegComp() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'caloComp' field */
    public java.lang.Float getCaloComp() {
      return caloComp;
    }
    
    /** Sets the value of the 'caloComp' field */
    public baconhep.TMuon.Builder setCaloComp(float value) {
      validate(fields()[33], value);
      this.caloComp = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'caloComp' field has been set */
    public boolean hasCaloComp() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'caloComp' field */
    public baconhep.TMuon.Builder clearCaloComp() {
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'q' field */
    public java.lang.Integer getQ() {
      return q;
    }
    
    /** Sets the value of the 'q' field */
    public baconhep.TMuon.Builder setQ(int value) {
      validate(fields()[34], value);
      this.q = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'q' field has been set */
    public boolean hasQ() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'q' field */
    public baconhep.TMuon.Builder clearQ() {
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'nValidHits' field */
    public java.lang.Integer getNValidHits() {
      return nValidHits;
    }
    
    /** Sets the value of the 'nValidHits' field */
    public baconhep.TMuon.Builder setNValidHits(int value) {
      validate(fields()[35], value);
      this.nValidHits = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'nValidHits' field has been set */
    public boolean hasNValidHits() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'nValidHits' field */
    public baconhep.TMuon.Builder clearNValidHits() {
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'typeBits' field */
    public java.lang.Long getTypeBits() {
      return typeBits;
    }
    
    /** Sets the value of the 'typeBits' field */
    public baconhep.TMuon.Builder setTypeBits(long value) {
      validate(fields()[36], value);
      this.typeBits = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'typeBits' field has been set */
    public boolean hasTypeBits() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'typeBits' field */
    public baconhep.TMuon.Builder clearTypeBits() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'selectorBits' field */
    public java.lang.Long getSelectorBits() {
      return selectorBits;
    }
    
    /** Sets the value of the 'selectorBits' field */
    public baconhep.TMuon.Builder setSelectorBits(long value) {
      validate(fields()[37], value);
      this.selectorBits = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'selectorBits' field has been set */
    public boolean hasSelectorBits() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'selectorBits' field */
    public baconhep.TMuon.Builder clearSelectorBits() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'pogIDBits' field */
    public java.lang.Long getPogIDBits() {
      return pogIDBits;
    }
    
    /** Sets the value of the 'pogIDBits' field */
    public baconhep.TMuon.Builder setPogIDBits(long value) {
      validate(fields()[38], value);
      this.pogIDBits = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'pogIDBits' field has been set */
    public boolean hasPogIDBits() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'pogIDBits' field */
    public baconhep.TMuon.Builder clearPogIDBits() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'nTkHits' field */
    public java.lang.Long getNTkHits() {
      return nTkHits;
    }
    
    /** Sets the value of the 'nTkHits' field */
    public baconhep.TMuon.Builder setNTkHits(long value) {
      validate(fields()[39], value);
      this.nTkHits = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'nTkHits' field has been set */
    public boolean hasNTkHits() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'nTkHits' field */
    public baconhep.TMuon.Builder clearNTkHits() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'nPixHits' field */
    public java.lang.Long getNPixHits() {
      return nPixHits;
    }
    
    /** Sets the value of the 'nPixHits' field */
    public baconhep.TMuon.Builder setNPixHits(long value) {
      validate(fields()[40], value);
      this.nPixHits = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'nPixHits' field has been set */
    public boolean hasNPixHits() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'nPixHits' field */
    public baconhep.TMuon.Builder clearNPixHits() {
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'nTkLayers' field */
    public java.lang.Long getNTkLayers() {
      return nTkLayers;
    }
    
    /** Sets the value of the 'nTkLayers' field */
    public baconhep.TMuon.Builder setNTkLayers(long value) {
      validate(fields()[41], value);
      this.nTkLayers = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'nTkLayers' field has been set */
    public boolean hasNTkLayers() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'nTkLayers' field */
    public baconhep.TMuon.Builder clearNTkLayers() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'nPixLayers' field */
    public java.lang.Long getNPixLayers() {
      return nPixLayers;
    }
    
    /** Sets the value of the 'nPixLayers' field */
    public baconhep.TMuon.Builder setNPixLayers(long value) {
      validate(fields()[42], value);
      this.nPixLayers = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'nPixLayers' field has been set */
    public boolean hasNPixLayers() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'nPixLayers' field */
    public baconhep.TMuon.Builder clearNPixLayers() {
      fieldSetFlags()[42] = false;
      return this;
    }

    /** Gets the value of the 'nMatchStn' field */
    public java.lang.Long getNMatchStn() {
      return nMatchStn;
    }
    
    /** Sets the value of the 'nMatchStn' field */
    public baconhep.TMuon.Builder setNMatchStn(long value) {
      validate(fields()[43], value);
      this.nMatchStn = value;
      fieldSetFlags()[43] = true;
      return this; 
    }
    
    /** Checks whether the 'nMatchStn' field has been set */
    public boolean hasNMatchStn() {
      return fieldSetFlags()[43];
    }
    
    /** Clears the value of the 'nMatchStn' field */
    public baconhep.TMuon.Builder clearNMatchStn() {
      fieldSetFlags()[43] = false;
      return this;
    }

    /** Gets the value of the 'trkID' field */
    public java.lang.Integer getTrkID() {
      return trkID;
    }
    
    /** Sets the value of the 'trkID' field */
    public baconhep.TMuon.Builder setTrkID(int value) {
      validate(fields()[44], value);
      this.trkID = value;
      fieldSetFlags()[44] = true;
      return this; 
    }
    
    /** Checks whether the 'trkID' field has been set */
    public boolean hasTrkID() {
      return fieldSetFlags()[44];
    }
    
    /** Clears the value of the 'trkID' field */
    public baconhep.TMuon.Builder clearTrkID() {
      fieldSetFlags()[44] = false;
      return this;
    }

    @Override
    public TMuon build() {
      try {
        TMuon record = new TMuon();
        record.pt = fieldSetFlags()[0] ? this.pt : (java.lang.Float) defaultValue(fields()[0]);
        record.eta = fieldSetFlags()[1] ? this.eta : (java.lang.Float) defaultValue(fields()[1]);
        record.phi = fieldSetFlags()[2] ? this.phi : (java.lang.Float) defaultValue(fields()[2]);
        record.ptErr = fieldSetFlags()[3] ? this.ptErr : (java.lang.Float) defaultValue(fields()[3]);
        record.staPt = fieldSetFlags()[4] ? this.staPt : (java.lang.Float) defaultValue(fields()[4]);
        record.staEta = fieldSetFlags()[5] ? this.staEta : (java.lang.Float) defaultValue(fields()[5]);
        record.staPhi = fieldSetFlags()[6] ? this.staPhi : (java.lang.Float) defaultValue(fields()[6]);
        record.pfPt = fieldSetFlags()[7] ? this.pfPt : (java.lang.Float) defaultValue(fields()[7]);
        record.pfEta = fieldSetFlags()[8] ? this.pfEta : (java.lang.Float) defaultValue(fields()[8]);
        record.pfPhi = fieldSetFlags()[9] ? this.pfPhi : (java.lang.Float) defaultValue(fields()[9]);
        record.trkIso = fieldSetFlags()[10] ? this.trkIso : (java.lang.Float) defaultValue(fields()[10]);
        record.ecalIso = fieldSetFlags()[11] ? this.ecalIso : (java.lang.Float) defaultValue(fields()[11]);
        record.hcalIso = fieldSetFlags()[12] ? this.hcalIso : (java.lang.Float) defaultValue(fields()[12]);
        record.chHadIso = fieldSetFlags()[13] ? this.chHadIso : (java.lang.Float) defaultValue(fields()[13]);
        record.gammaIso = fieldSetFlags()[14] ? this.gammaIso : (java.lang.Float) defaultValue(fields()[14]);
        record.neuHadIso = fieldSetFlags()[15] ? this.neuHadIso : (java.lang.Float) defaultValue(fields()[15]);
        record.puIso = fieldSetFlags()[16] ? this.puIso : (java.lang.Float) defaultValue(fields()[16]);
        record.puppiChHadIso = fieldSetFlags()[17] ? this.puppiChHadIso : (java.lang.Float) defaultValue(fields()[17]);
        record.puppiGammaIso = fieldSetFlags()[18] ? this.puppiGammaIso : (java.lang.Float) defaultValue(fields()[18]);
        record.puppiNeuHadIso = fieldSetFlags()[19] ? this.puppiNeuHadIso : (java.lang.Float) defaultValue(fields()[19]);
        record.puppiChHadIsoNoLep = fieldSetFlags()[20] ? this.puppiChHadIsoNoLep : (java.lang.Float) defaultValue(fields()[20]);
        record.puppiGammaIsoNoLep = fieldSetFlags()[21] ? this.puppiGammaIsoNoLep : (java.lang.Float) defaultValue(fields()[21]);
        record.puppiNeuHadIsoNoLep = fieldSetFlags()[22] ? this.puppiNeuHadIsoNoLep : (java.lang.Float) defaultValue(fields()[22]);
        record.d0 = fieldSetFlags()[23] ? this.d0 : (java.lang.Float) defaultValue(fields()[23]);
        record.dz = fieldSetFlags()[24] ? this.dz : (java.lang.Float) defaultValue(fields()[24]);
        record.sip3d = fieldSetFlags()[25] ? this.sip3d : (java.lang.Float) defaultValue(fields()[25]);
        record.tkNchi2 = fieldSetFlags()[26] ? this.tkNchi2 : (java.lang.Float) defaultValue(fields()[26]);
        record.muNchi2 = fieldSetFlags()[27] ? this.muNchi2 : (java.lang.Float) defaultValue(fields()[27]);
        record.trkKink = fieldSetFlags()[28] ? this.trkKink : (java.lang.Float) defaultValue(fields()[28]);
        record.glbKink = fieldSetFlags()[29] ? this.glbKink : (java.lang.Float) defaultValue(fields()[29]);
        record.trkHitFrac = fieldSetFlags()[30] ? this.trkHitFrac : (java.lang.Float) defaultValue(fields()[30]);
        record.chi2LocPos = fieldSetFlags()[31] ? this.chi2LocPos : (java.lang.Float) defaultValue(fields()[31]);
        record.segComp = fieldSetFlags()[32] ? this.segComp : (java.lang.Float) defaultValue(fields()[32]);
        record.caloComp = fieldSetFlags()[33] ? this.caloComp : (java.lang.Float) defaultValue(fields()[33]);
        record.q = fieldSetFlags()[34] ? this.q : (java.lang.Integer) defaultValue(fields()[34]);
        record.nValidHits = fieldSetFlags()[35] ? this.nValidHits : (java.lang.Integer) defaultValue(fields()[35]);
        record.typeBits = fieldSetFlags()[36] ? this.typeBits : (java.lang.Long) defaultValue(fields()[36]);
        record.selectorBits = fieldSetFlags()[37] ? this.selectorBits : (java.lang.Long) defaultValue(fields()[37]);
        record.pogIDBits = fieldSetFlags()[38] ? this.pogIDBits : (java.lang.Long) defaultValue(fields()[38]);
        record.nTkHits = fieldSetFlags()[39] ? this.nTkHits : (java.lang.Long) defaultValue(fields()[39]);
        record.nPixHits = fieldSetFlags()[40] ? this.nPixHits : (java.lang.Long) defaultValue(fields()[40]);
        record.nTkLayers = fieldSetFlags()[41] ? this.nTkLayers : (java.lang.Long) defaultValue(fields()[41]);
        record.nPixLayers = fieldSetFlags()[42] ? this.nPixLayers : (java.lang.Long) defaultValue(fields()[42]);
        record.nMatchStn = fieldSetFlags()[43] ? this.nMatchStn : (java.lang.Long) defaultValue(fields()[43]);
        record.trkID = fieldSetFlags()[44] ? this.trkID : (java.lang.Integer) defaultValue(fields()[44]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
