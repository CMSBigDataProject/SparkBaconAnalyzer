/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package baconhep;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TEventInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TEventInfo\",\"namespace\":\"baconhep\",\"fields\":[{\"name\":\"runNum\",\"type\":\"long\"},{\"name\":\"evtNum\",\"type\":\"long\"},{\"name\":\"lumiSec\",\"type\":\"long\"},{\"name\":\"metFilterFailBits\",\"type\":\"long\"},{\"name\":\"nPU\",\"type\":\"long\"},{\"name\":\"nPUm\",\"type\":\"long\"},{\"name\":\"nPUp\",\"type\":\"long\"},{\"name\":\"nPUmean\",\"type\":\"float\"},{\"name\":\"nPUmeanm\",\"type\":\"float\"},{\"name\":\"nPUmeanp\",\"type\":\"float\"},{\"name\":\"pvx\",\"type\":\"float\"},{\"name\":\"pvy\",\"type\":\"float\"},{\"name\":\"pvz\",\"type\":\"float\"},{\"name\":\"bsx\",\"type\":\"float\"},{\"name\":\"bsy\",\"type\":\"float\"},{\"name\":\"bsz\",\"type\":\"float\"},{\"name\":\"pfMET\",\"type\":\"float\"},{\"name\":\"pfMETphi\",\"type\":\"float\"},{\"name\":\"pfMETCov00\",\"type\":\"float\"},{\"name\":\"pfMETCov01\",\"type\":\"float\"},{\"name\":\"pfMETCov11\",\"type\":\"float\"},{\"name\":\"pfMETC\",\"type\":\"float\"},{\"name\":\"pfMETCphi\",\"type\":\"float\"},{\"name\":\"pfMETCCov00\",\"type\":\"float\"},{\"name\":\"pfMETCCov01\",\"type\":\"float\"},{\"name\":\"pfMETCCov11\",\"type\":\"float\"},{\"name\":\"puppET\",\"type\":\"float\"},{\"name\":\"puppETphi\",\"type\":\"float\"},{\"name\":\"puppETCov00\",\"type\":\"float\"},{\"name\":\"puppETCov01\",\"type\":\"float\"},{\"name\":\"puppETCov11\",\"type\":\"float\"},{\"name\":\"puppETC\",\"type\":\"float\"},{\"name\":\"puppETCphi\",\"type\":\"float\"},{\"name\":\"puppETCCov00\",\"type\":\"float\"},{\"name\":\"puppETCCov01\",\"type\":\"float\"},{\"name\":\"puppETCCov11\",\"type\":\"float\"},{\"name\":\"alpacaMET\",\"type\":\"float\"},{\"name\":\"alpacaMETphi\",\"type\":\"float\"},{\"name\":\"pcpMET\",\"type\":\"float\"},{\"name\":\"pcpMETphi\",\"type\":\"float\"},{\"name\":\"rhoIso\",\"type\":\"float\"},{\"name\":\"rhoJet\",\"type\":\"float\"},{\"name\":\"hasGoodPV\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long runNum;
  @Deprecated public long evtNum;
  @Deprecated public long lumiSec;
  @Deprecated public long metFilterFailBits;
  @Deprecated public long nPU;
  @Deprecated public long nPUm;
  @Deprecated public long nPUp;
  @Deprecated public float nPUmean;
  @Deprecated public float nPUmeanm;
  @Deprecated public float nPUmeanp;
  @Deprecated public float pvx;
  @Deprecated public float pvy;
  @Deprecated public float pvz;
  @Deprecated public float bsx;
  @Deprecated public float bsy;
  @Deprecated public float bsz;
  @Deprecated public float pfMET;
  @Deprecated public float pfMETphi;
  @Deprecated public float pfMETCov00;
  @Deprecated public float pfMETCov01;
  @Deprecated public float pfMETCov11;
  @Deprecated public float pfMETC;
  @Deprecated public float pfMETCphi;
  @Deprecated public float pfMETCCov00;
  @Deprecated public float pfMETCCov01;
  @Deprecated public float pfMETCCov11;
  @Deprecated public float puppET;
  @Deprecated public float puppETphi;
  @Deprecated public float puppETCov00;
  @Deprecated public float puppETCov01;
  @Deprecated public float puppETCov11;
  @Deprecated public float puppETC;
  @Deprecated public float puppETCphi;
  @Deprecated public float puppETCCov00;
  @Deprecated public float puppETCCov01;
  @Deprecated public float puppETCCov11;
  @Deprecated public float alpacaMET;
  @Deprecated public float alpacaMETphi;
  @Deprecated public float pcpMET;
  @Deprecated public float pcpMETphi;
  @Deprecated public float rhoIso;
  @Deprecated public float rhoJet;
  @Deprecated public boolean hasGoodPV;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TEventInfo() {}

  /**
   * All-args constructor.
   */
  public TEventInfo(java.lang.Long runNum, java.lang.Long evtNum, java.lang.Long lumiSec, java.lang.Long metFilterFailBits, java.lang.Long nPU, java.lang.Long nPUm, java.lang.Long nPUp, java.lang.Float nPUmean, java.lang.Float nPUmeanm, java.lang.Float nPUmeanp, java.lang.Float pvx, java.lang.Float pvy, java.lang.Float pvz, java.lang.Float bsx, java.lang.Float bsy, java.lang.Float bsz, java.lang.Float pfMET, java.lang.Float pfMETphi, java.lang.Float pfMETCov00, java.lang.Float pfMETCov01, java.lang.Float pfMETCov11, java.lang.Float pfMETC, java.lang.Float pfMETCphi, java.lang.Float pfMETCCov00, java.lang.Float pfMETCCov01, java.lang.Float pfMETCCov11, java.lang.Float puppET, java.lang.Float puppETphi, java.lang.Float puppETCov00, java.lang.Float puppETCov01, java.lang.Float puppETCov11, java.lang.Float puppETC, java.lang.Float puppETCphi, java.lang.Float puppETCCov00, java.lang.Float puppETCCov01, java.lang.Float puppETCCov11, java.lang.Float alpacaMET, java.lang.Float alpacaMETphi, java.lang.Float pcpMET, java.lang.Float pcpMETphi, java.lang.Float rhoIso, java.lang.Float rhoJet, java.lang.Boolean hasGoodPV) {
    this.runNum = runNum;
    this.evtNum = evtNum;
    this.lumiSec = lumiSec;
    this.metFilterFailBits = metFilterFailBits;
    this.nPU = nPU;
    this.nPUm = nPUm;
    this.nPUp = nPUp;
    this.nPUmean = nPUmean;
    this.nPUmeanm = nPUmeanm;
    this.nPUmeanp = nPUmeanp;
    this.pvx = pvx;
    this.pvy = pvy;
    this.pvz = pvz;
    this.bsx = bsx;
    this.bsy = bsy;
    this.bsz = bsz;
    this.pfMET = pfMET;
    this.pfMETphi = pfMETphi;
    this.pfMETCov00 = pfMETCov00;
    this.pfMETCov01 = pfMETCov01;
    this.pfMETCov11 = pfMETCov11;
    this.pfMETC = pfMETC;
    this.pfMETCphi = pfMETCphi;
    this.pfMETCCov00 = pfMETCCov00;
    this.pfMETCCov01 = pfMETCCov01;
    this.pfMETCCov11 = pfMETCCov11;
    this.puppET = puppET;
    this.puppETphi = puppETphi;
    this.puppETCov00 = puppETCov00;
    this.puppETCov01 = puppETCov01;
    this.puppETCov11 = puppETCov11;
    this.puppETC = puppETC;
    this.puppETCphi = puppETCphi;
    this.puppETCCov00 = puppETCCov00;
    this.puppETCCov01 = puppETCCov01;
    this.puppETCCov11 = puppETCCov11;
    this.alpacaMET = alpacaMET;
    this.alpacaMETphi = alpacaMETphi;
    this.pcpMET = pcpMET;
    this.pcpMETphi = pcpMETphi;
    this.rhoIso = rhoIso;
    this.rhoJet = rhoJet;
    this.hasGoodPV = hasGoodPV;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return runNum;
    case 1: return evtNum;
    case 2: return lumiSec;
    case 3: return metFilterFailBits;
    case 4: return nPU;
    case 5: return nPUm;
    case 6: return nPUp;
    case 7: return nPUmean;
    case 8: return nPUmeanm;
    case 9: return nPUmeanp;
    case 10: return pvx;
    case 11: return pvy;
    case 12: return pvz;
    case 13: return bsx;
    case 14: return bsy;
    case 15: return bsz;
    case 16: return pfMET;
    case 17: return pfMETphi;
    case 18: return pfMETCov00;
    case 19: return pfMETCov01;
    case 20: return pfMETCov11;
    case 21: return pfMETC;
    case 22: return pfMETCphi;
    case 23: return pfMETCCov00;
    case 24: return pfMETCCov01;
    case 25: return pfMETCCov11;
    case 26: return puppET;
    case 27: return puppETphi;
    case 28: return puppETCov00;
    case 29: return puppETCov01;
    case 30: return puppETCov11;
    case 31: return puppETC;
    case 32: return puppETCphi;
    case 33: return puppETCCov00;
    case 34: return puppETCCov01;
    case 35: return puppETCCov11;
    case 36: return alpacaMET;
    case 37: return alpacaMETphi;
    case 38: return pcpMET;
    case 39: return pcpMETphi;
    case 40: return rhoIso;
    case 41: return rhoJet;
    case 42: return hasGoodPV;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: runNum = (java.lang.Long)value$; break;
    case 1: evtNum = (java.lang.Long)value$; break;
    case 2: lumiSec = (java.lang.Long)value$; break;
    case 3: metFilterFailBits = (java.lang.Long)value$; break;
    case 4: nPU = (java.lang.Long)value$; break;
    case 5: nPUm = (java.lang.Long)value$; break;
    case 6: nPUp = (java.lang.Long)value$; break;
    case 7: nPUmean = (java.lang.Float)value$; break;
    case 8: nPUmeanm = (java.lang.Float)value$; break;
    case 9: nPUmeanp = (java.lang.Float)value$; break;
    case 10: pvx = (java.lang.Float)value$; break;
    case 11: pvy = (java.lang.Float)value$; break;
    case 12: pvz = (java.lang.Float)value$; break;
    case 13: bsx = (java.lang.Float)value$; break;
    case 14: bsy = (java.lang.Float)value$; break;
    case 15: bsz = (java.lang.Float)value$; break;
    case 16: pfMET = (java.lang.Float)value$; break;
    case 17: pfMETphi = (java.lang.Float)value$; break;
    case 18: pfMETCov00 = (java.lang.Float)value$; break;
    case 19: pfMETCov01 = (java.lang.Float)value$; break;
    case 20: pfMETCov11 = (java.lang.Float)value$; break;
    case 21: pfMETC = (java.lang.Float)value$; break;
    case 22: pfMETCphi = (java.lang.Float)value$; break;
    case 23: pfMETCCov00 = (java.lang.Float)value$; break;
    case 24: pfMETCCov01 = (java.lang.Float)value$; break;
    case 25: pfMETCCov11 = (java.lang.Float)value$; break;
    case 26: puppET = (java.lang.Float)value$; break;
    case 27: puppETphi = (java.lang.Float)value$; break;
    case 28: puppETCov00 = (java.lang.Float)value$; break;
    case 29: puppETCov01 = (java.lang.Float)value$; break;
    case 30: puppETCov11 = (java.lang.Float)value$; break;
    case 31: puppETC = (java.lang.Float)value$; break;
    case 32: puppETCphi = (java.lang.Float)value$; break;
    case 33: puppETCCov00 = (java.lang.Float)value$; break;
    case 34: puppETCCov01 = (java.lang.Float)value$; break;
    case 35: puppETCCov11 = (java.lang.Float)value$; break;
    case 36: alpacaMET = (java.lang.Float)value$; break;
    case 37: alpacaMETphi = (java.lang.Float)value$; break;
    case 38: pcpMET = (java.lang.Float)value$; break;
    case 39: pcpMETphi = (java.lang.Float)value$; break;
    case 40: rhoIso = (java.lang.Float)value$; break;
    case 41: rhoJet = (java.lang.Float)value$; break;
    case 42: hasGoodPV = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'runNum' field.
   */
  public java.lang.Long getRunNum() {
    return runNum;
  }

  /**
   * Sets the value of the 'runNum' field.
   * @param value the value to set.
   */
  public void setRunNum(java.lang.Long value) {
    this.runNum = value;
  }

  /**
   * Gets the value of the 'evtNum' field.
   */
  public java.lang.Long getEvtNum() {
    return evtNum;
  }

  /**
   * Sets the value of the 'evtNum' field.
   * @param value the value to set.
   */
  public void setEvtNum(java.lang.Long value) {
    this.evtNum = value;
  }

  /**
   * Gets the value of the 'lumiSec' field.
   */
  public java.lang.Long getLumiSec() {
    return lumiSec;
  }

  /**
   * Sets the value of the 'lumiSec' field.
   * @param value the value to set.
   */
  public void setLumiSec(java.lang.Long value) {
    this.lumiSec = value;
  }

  /**
   * Gets the value of the 'metFilterFailBits' field.
   */
  public java.lang.Long getMetFilterFailBits() {
    return metFilterFailBits;
  }

  /**
   * Sets the value of the 'metFilterFailBits' field.
   * @param value the value to set.
   */
  public void setMetFilterFailBits(java.lang.Long value) {
    this.metFilterFailBits = value;
  }

  /**
   * Gets the value of the 'nPU' field.
   */
  public java.lang.Long getNPU() {
    return nPU;
  }

  /**
   * Sets the value of the 'nPU' field.
   * @param value the value to set.
   */
  public void setNPU(java.lang.Long value) {
    this.nPU = value;
  }

  /**
   * Gets the value of the 'nPUm' field.
   */
  public java.lang.Long getNPUm() {
    return nPUm;
  }

  /**
   * Sets the value of the 'nPUm' field.
   * @param value the value to set.
   */
  public void setNPUm(java.lang.Long value) {
    this.nPUm = value;
  }

  /**
   * Gets the value of the 'nPUp' field.
   */
  public java.lang.Long getNPUp() {
    return nPUp;
  }

  /**
   * Sets the value of the 'nPUp' field.
   * @param value the value to set.
   */
  public void setNPUp(java.lang.Long value) {
    this.nPUp = value;
  }

  /**
   * Gets the value of the 'nPUmean' field.
   */
  public java.lang.Float getNPUmean() {
    return nPUmean;
  }

  /**
   * Sets the value of the 'nPUmean' field.
   * @param value the value to set.
   */
  public void setNPUmean(java.lang.Float value) {
    this.nPUmean = value;
  }

  /**
   * Gets the value of the 'nPUmeanm' field.
   */
  public java.lang.Float getNPUmeanm() {
    return nPUmeanm;
  }

  /**
   * Sets the value of the 'nPUmeanm' field.
   * @param value the value to set.
   */
  public void setNPUmeanm(java.lang.Float value) {
    this.nPUmeanm = value;
  }

  /**
   * Gets the value of the 'nPUmeanp' field.
   */
  public java.lang.Float getNPUmeanp() {
    return nPUmeanp;
  }

  /**
   * Sets the value of the 'nPUmeanp' field.
   * @param value the value to set.
   */
  public void setNPUmeanp(java.lang.Float value) {
    this.nPUmeanp = value;
  }

  /**
   * Gets the value of the 'pvx' field.
   */
  public java.lang.Float getPvx() {
    return pvx;
  }

  /**
   * Sets the value of the 'pvx' field.
   * @param value the value to set.
   */
  public void setPvx(java.lang.Float value) {
    this.pvx = value;
  }

  /**
   * Gets the value of the 'pvy' field.
   */
  public java.lang.Float getPvy() {
    return pvy;
  }

  /**
   * Sets the value of the 'pvy' field.
   * @param value the value to set.
   */
  public void setPvy(java.lang.Float value) {
    this.pvy = value;
  }

  /**
   * Gets the value of the 'pvz' field.
   */
  public java.lang.Float getPvz() {
    return pvz;
  }

  /**
   * Sets the value of the 'pvz' field.
   * @param value the value to set.
   */
  public void setPvz(java.lang.Float value) {
    this.pvz = value;
  }

  /**
   * Gets the value of the 'bsx' field.
   */
  public java.lang.Float getBsx() {
    return bsx;
  }

  /**
   * Sets the value of the 'bsx' field.
   * @param value the value to set.
   */
  public void setBsx(java.lang.Float value) {
    this.bsx = value;
  }

  /**
   * Gets the value of the 'bsy' field.
   */
  public java.lang.Float getBsy() {
    return bsy;
  }

  /**
   * Sets the value of the 'bsy' field.
   * @param value the value to set.
   */
  public void setBsy(java.lang.Float value) {
    this.bsy = value;
  }

  /**
   * Gets the value of the 'bsz' field.
   */
  public java.lang.Float getBsz() {
    return bsz;
  }

  /**
   * Sets the value of the 'bsz' field.
   * @param value the value to set.
   */
  public void setBsz(java.lang.Float value) {
    this.bsz = value;
  }

  /**
   * Gets the value of the 'pfMET' field.
   */
  public java.lang.Float getPfMET() {
    return pfMET;
  }

  /**
   * Sets the value of the 'pfMET' field.
   * @param value the value to set.
   */
  public void setPfMET(java.lang.Float value) {
    this.pfMET = value;
  }

  /**
   * Gets the value of the 'pfMETphi' field.
   */
  public java.lang.Float getPfMETphi() {
    return pfMETphi;
  }

  /**
   * Sets the value of the 'pfMETphi' field.
   * @param value the value to set.
   */
  public void setPfMETphi(java.lang.Float value) {
    this.pfMETphi = value;
  }

  /**
   * Gets the value of the 'pfMETCov00' field.
   */
  public java.lang.Float getPfMETCov00() {
    return pfMETCov00;
  }

  /**
   * Sets the value of the 'pfMETCov00' field.
   * @param value the value to set.
   */
  public void setPfMETCov00(java.lang.Float value) {
    this.pfMETCov00 = value;
  }

  /**
   * Gets the value of the 'pfMETCov01' field.
   */
  public java.lang.Float getPfMETCov01() {
    return pfMETCov01;
  }

  /**
   * Sets the value of the 'pfMETCov01' field.
   * @param value the value to set.
   */
  public void setPfMETCov01(java.lang.Float value) {
    this.pfMETCov01 = value;
  }

  /**
   * Gets the value of the 'pfMETCov11' field.
   */
  public java.lang.Float getPfMETCov11() {
    return pfMETCov11;
  }

  /**
   * Sets the value of the 'pfMETCov11' field.
   * @param value the value to set.
   */
  public void setPfMETCov11(java.lang.Float value) {
    this.pfMETCov11 = value;
  }

  /**
   * Gets the value of the 'pfMETC' field.
   */
  public java.lang.Float getPfMETC() {
    return pfMETC;
  }

  /**
   * Sets the value of the 'pfMETC' field.
   * @param value the value to set.
   */
  public void setPfMETC(java.lang.Float value) {
    this.pfMETC = value;
  }

  /**
   * Gets the value of the 'pfMETCphi' field.
   */
  public java.lang.Float getPfMETCphi() {
    return pfMETCphi;
  }

  /**
   * Sets the value of the 'pfMETCphi' field.
   * @param value the value to set.
   */
  public void setPfMETCphi(java.lang.Float value) {
    this.pfMETCphi = value;
  }

  /**
   * Gets the value of the 'pfMETCCov00' field.
   */
  public java.lang.Float getPfMETCCov00() {
    return pfMETCCov00;
  }

  /**
   * Sets the value of the 'pfMETCCov00' field.
   * @param value the value to set.
   */
  public void setPfMETCCov00(java.lang.Float value) {
    this.pfMETCCov00 = value;
  }

  /**
   * Gets the value of the 'pfMETCCov01' field.
   */
  public java.lang.Float getPfMETCCov01() {
    return pfMETCCov01;
  }

  /**
   * Sets the value of the 'pfMETCCov01' field.
   * @param value the value to set.
   */
  public void setPfMETCCov01(java.lang.Float value) {
    this.pfMETCCov01 = value;
  }

  /**
   * Gets the value of the 'pfMETCCov11' field.
   */
  public java.lang.Float getPfMETCCov11() {
    return pfMETCCov11;
  }

  /**
   * Sets the value of the 'pfMETCCov11' field.
   * @param value the value to set.
   */
  public void setPfMETCCov11(java.lang.Float value) {
    this.pfMETCCov11 = value;
  }

  /**
   * Gets the value of the 'puppET' field.
   */
  public java.lang.Float getPuppET() {
    return puppET;
  }

  /**
   * Sets the value of the 'puppET' field.
   * @param value the value to set.
   */
  public void setPuppET(java.lang.Float value) {
    this.puppET = value;
  }

  /**
   * Gets the value of the 'puppETphi' field.
   */
  public java.lang.Float getPuppETphi() {
    return puppETphi;
  }

  /**
   * Sets the value of the 'puppETphi' field.
   * @param value the value to set.
   */
  public void setPuppETphi(java.lang.Float value) {
    this.puppETphi = value;
  }

  /**
   * Gets the value of the 'puppETCov00' field.
   */
  public java.lang.Float getPuppETCov00() {
    return puppETCov00;
  }

  /**
   * Sets the value of the 'puppETCov00' field.
   * @param value the value to set.
   */
  public void setPuppETCov00(java.lang.Float value) {
    this.puppETCov00 = value;
  }

  /**
   * Gets the value of the 'puppETCov01' field.
   */
  public java.lang.Float getPuppETCov01() {
    return puppETCov01;
  }

  /**
   * Sets the value of the 'puppETCov01' field.
   * @param value the value to set.
   */
  public void setPuppETCov01(java.lang.Float value) {
    this.puppETCov01 = value;
  }

  /**
   * Gets the value of the 'puppETCov11' field.
   */
  public java.lang.Float getPuppETCov11() {
    return puppETCov11;
  }

  /**
   * Sets the value of the 'puppETCov11' field.
   * @param value the value to set.
   */
  public void setPuppETCov11(java.lang.Float value) {
    this.puppETCov11 = value;
  }

  /**
   * Gets the value of the 'puppETC' field.
   */
  public java.lang.Float getPuppETC() {
    return puppETC;
  }

  /**
   * Sets the value of the 'puppETC' field.
   * @param value the value to set.
   */
  public void setPuppETC(java.lang.Float value) {
    this.puppETC = value;
  }

  /**
   * Gets the value of the 'puppETCphi' field.
   */
  public java.lang.Float getPuppETCphi() {
    return puppETCphi;
  }

  /**
   * Sets the value of the 'puppETCphi' field.
   * @param value the value to set.
   */
  public void setPuppETCphi(java.lang.Float value) {
    this.puppETCphi = value;
  }

  /**
   * Gets the value of the 'puppETCCov00' field.
   */
  public java.lang.Float getPuppETCCov00() {
    return puppETCCov00;
  }

  /**
   * Sets the value of the 'puppETCCov00' field.
   * @param value the value to set.
   */
  public void setPuppETCCov00(java.lang.Float value) {
    this.puppETCCov00 = value;
  }

  /**
   * Gets the value of the 'puppETCCov01' field.
   */
  public java.lang.Float getPuppETCCov01() {
    return puppETCCov01;
  }

  /**
   * Sets the value of the 'puppETCCov01' field.
   * @param value the value to set.
   */
  public void setPuppETCCov01(java.lang.Float value) {
    this.puppETCCov01 = value;
  }

  /**
   * Gets the value of the 'puppETCCov11' field.
   */
  public java.lang.Float getPuppETCCov11() {
    return puppETCCov11;
  }

  /**
   * Sets the value of the 'puppETCCov11' field.
   * @param value the value to set.
   */
  public void setPuppETCCov11(java.lang.Float value) {
    this.puppETCCov11 = value;
  }

  /**
   * Gets the value of the 'alpacaMET' field.
   */
  public java.lang.Float getAlpacaMET() {
    return alpacaMET;
  }

  /**
   * Sets the value of the 'alpacaMET' field.
   * @param value the value to set.
   */
  public void setAlpacaMET(java.lang.Float value) {
    this.alpacaMET = value;
  }

  /**
   * Gets the value of the 'alpacaMETphi' field.
   */
  public java.lang.Float getAlpacaMETphi() {
    return alpacaMETphi;
  }

  /**
   * Sets the value of the 'alpacaMETphi' field.
   * @param value the value to set.
   */
  public void setAlpacaMETphi(java.lang.Float value) {
    this.alpacaMETphi = value;
  }

  /**
   * Gets the value of the 'pcpMET' field.
   */
  public java.lang.Float getPcpMET() {
    return pcpMET;
  }

  /**
   * Sets the value of the 'pcpMET' field.
   * @param value the value to set.
   */
  public void setPcpMET(java.lang.Float value) {
    this.pcpMET = value;
  }

  /**
   * Gets the value of the 'pcpMETphi' field.
   */
  public java.lang.Float getPcpMETphi() {
    return pcpMETphi;
  }

  /**
   * Sets the value of the 'pcpMETphi' field.
   * @param value the value to set.
   */
  public void setPcpMETphi(java.lang.Float value) {
    this.pcpMETphi = value;
  }

  /**
   * Gets the value of the 'rhoIso' field.
   */
  public java.lang.Float getRhoIso() {
    return rhoIso;
  }

  /**
   * Sets the value of the 'rhoIso' field.
   * @param value the value to set.
   */
  public void setRhoIso(java.lang.Float value) {
    this.rhoIso = value;
  }

  /**
   * Gets the value of the 'rhoJet' field.
   */
  public java.lang.Float getRhoJet() {
    return rhoJet;
  }

  /**
   * Sets the value of the 'rhoJet' field.
   * @param value the value to set.
   */
  public void setRhoJet(java.lang.Float value) {
    this.rhoJet = value;
  }

  /**
   * Gets the value of the 'hasGoodPV' field.
   */
  public java.lang.Boolean getHasGoodPV() {
    return hasGoodPV;
  }

  /**
   * Sets the value of the 'hasGoodPV' field.
   * @param value the value to set.
   */
  public void setHasGoodPV(java.lang.Boolean value) {
    this.hasGoodPV = value;
  }

  /** Creates a new TEventInfo RecordBuilder */
  public static baconhep.TEventInfo.Builder newBuilder() {
    return new baconhep.TEventInfo.Builder();
  }
  
  /** Creates a new TEventInfo RecordBuilder by copying an existing Builder */
  public static baconhep.TEventInfo.Builder newBuilder(baconhep.TEventInfo.Builder other) {
    return new baconhep.TEventInfo.Builder(other);
  }
  
  /** Creates a new TEventInfo RecordBuilder by copying an existing TEventInfo instance */
  public static baconhep.TEventInfo.Builder newBuilder(baconhep.TEventInfo other) {
    return new baconhep.TEventInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for TEventInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TEventInfo>
    implements org.apache.avro.data.RecordBuilder<TEventInfo> {

    private long runNum;
    private long evtNum;
    private long lumiSec;
    private long metFilterFailBits;
    private long nPU;
    private long nPUm;
    private long nPUp;
    private float nPUmean;
    private float nPUmeanm;
    private float nPUmeanp;
    private float pvx;
    private float pvy;
    private float pvz;
    private float bsx;
    private float bsy;
    private float bsz;
    private float pfMET;
    private float pfMETphi;
    private float pfMETCov00;
    private float pfMETCov01;
    private float pfMETCov11;
    private float pfMETC;
    private float pfMETCphi;
    private float pfMETCCov00;
    private float pfMETCCov01;
    private float pfMETCCov11;
    private float puppET;
    private float puppETphi;
    private float puppETCov00;
    private float puppETCov01;
    private float puppETCov11;
    private float puppETC;
    private float puppETCphi;
    private float puppETCCov00;
    private float puppETCCov01;
    private float puppETCCov11;
    private float alpacaMET;
    private float alpacaMETphi;
    private float pcpMET;
    private float pcpMETphi;
    private float rhoIso;
    private float rhoJet;
    private boolean hasGoodPV;

    /** Creates a new Builder */
    private Builder() {
      super(baconhep.TEventInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(baconhep.TEventInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.runNum)) {
        this.runNum = data().deepCopy(fields()[0].schema(), other.runNum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.evtNum)) {
        this.evtNum = data().deepCopy(fields()[1].schema(), other.evtNum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lumiSec)) {
        this.lumiSec = data().deepCopy(fields()[2].schema(), other.lumiSec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metFilterFailBits)) {
        this.metFilterFailBits = data().deepCopy(fields()[3].schema(), other.metFilterFailBits);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nPU)) {
        this.nPU = data().deepCopy(fields()[4].schema(), other.nPU);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nPUm)) {
        this.nPUm = data().deepCopy(fields()[5].schema(), other.nPUm);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nPUp)) {
        this.nPUp = data().deepCopy(fields()[6].schema(), other.nPUp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nPUmean)) {
        this.nPUmean = data().deepCopy(fields()[7].schema(), other.nPUmean);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nPUmeanm)) {
        this.nPUmeanm = data().deepCopy(fields()[8].schema(), other.nPUmeanm);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nPUmeanp)) {
        this.nPUmeanp = data().deepCopy(fields()[9].schema(), other.nPUmeanp);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pvx)) {
        this.pvx = data().deepCopy(fields()[10].schema(), other.pvx);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.pvy)) {
        this.pvy = data().deepCopy(fields()[11].schema(), other.pvy);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pvz)) {
        this.pvz = data().deepCopy(fields()[12].schema(), other.pvz);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.bsx)) {
        this.bsx = data().deepCopy(fields()[13].schema(), other.bsx);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bsy)) {
        this.bsy = data().deepCopy(fields()[14].schema(), other.bsy);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.bsz)) {
        this.bsz = data().deepCopy(fields()[15].schema(), other.bsz);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pfMET)) {
        this.pfMET = data().deepCopy(fields()[16].schema(), other.pfMET);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.pfMETphi)) {
        this.pfMETphi = data().deepCopy(fields()[17].schema(), other.pfMETphi);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pfMETCov00)) {
        this.pfMETCov00 = data().deepCopy(fields()[18].schema(), other.pfMETCov00);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pfMETCov01)) {
        this.pfMETCov01 = data().deepCopy(fields()[19].schema(), other.pfMETCov01);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.pfMETCov11)) {
        this.pfMETCov11 = data().deepCopy(fields()[20].schema(), other.pfMETCov11);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.pfMETC)) {
        this.pfMETC = data().deepCopy(fields()[21].schema(), other.pfMETC);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pfMETCphi)) {
        this.pfMETCphi = data().deepCopy(fields()[22].schema(), other.pfMETCphi);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pfMETCCov00)) {
        this.pfMETCCov00 = data().deepCopy(fields()[23].schema(), other.pfMETCCov00);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pfMETCCov01)) {
        this.pfMETCCov01 = data().deepCopy(fields()[24].schema(), other.pfMETCCov01);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pfMETCCov11)) {
        this.pfMETCCov11 = data().deepCopy(fields()[25].schema(), other.pfMETCCov11);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.puppET)) {
        this.puppET = data().deepCopy(fields()[26].schema(), other.puppET);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.puppETphi)) {
        this.puppETphi = data().deepCopy(fields()[27].schema(), other.puppETphi);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.puppETCov00)) {
        this.puppETCov00 = data().deepCopy(fields()[28].schema(), other.puppETCov00);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.puppETCov01)) {
        this.puppETCov01 = data().deepCopy(fields()[29].schema(), other.puppETCov01);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.puppETCov11)) {
        this.puppETCov11 = data().deepCopy(fields()[30].schema(), other.puppETCov11);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.puppETC)) {
        this.puppETC = data().deepCopy(fields()[31].schema(), other.puppETC);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.puppETCphi)) {
        this.puppETCphi = data().deepCopy(fields()[32].schema(), other.puppETCphi);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.puppETCCov00)) {
        this.puppETCCov00 = data().deepCopy(fields()[33].schema(), other.puppETCCov00);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.puppETCCov01)) {
        this.puppETCCov01 = data().deepCopy(fields()[34].schema(), other.puppETCCov01);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.puppETCCov11)) {
        this.puppETCCov11 = data().deepCopy(fields()[35].schema(), other.puppETCCov11);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.alpacaMET)) {
        this.alpacaMET = data().deepCopy(fields()[36].schema(), other.alpacaMET);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.alpacaMETphi)) {
        this.alpacaMETphi = data().deepCopy(fields()[37].schema(), other.alpacaMETphi);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pcpMET)) {
        this.pcpMET = data().deepCopy(fields()[38].schema(), other.pcpMET);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.pcpMETphi)) {
        this.pcpMETphi = data().deepCopy(fields()[39].schema(), other.pcpMETphi);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.rhoIso)) {
        this.rhoIso = data().deepCopy(fields()[40].schema(), other.rhoIso);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.rhoJet)) {
        this.rhoJet = data().deepCopy(fields()[41].schema(), other.rhoJet);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.hasGoodPV)) {
        this.hasGoodPV = data().deepCopy(fields()[42].schema(), other.hasGoodPV);
        fieldSetFlags()[42] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TEventInfo instance */
    private Builder(baconhep.TEventInfo other) {
            super(baconhep.TEventInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.runNum)) {
        this.runNum = data().deepCopy(fields()[0].schema(), other.runNum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.evtNum)) {
        this.evtNum = data().deepCopy(fields()[1].schema(), other.evtNum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lumiSec)) {
        this.lumiSec = data().deepCopy(fields()[2].schema(), other.lumiSec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metFilterFailBits)) {
        this.metFilterFailBits = data().deepCopy(fields()[3].schema(), other.metFilterFailBits);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nPU)) {
        this.nPU = data().deepCopy(fields()[4].schema(), other.nPU);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nPUm)) {
        this.nPUm = data().deepCopy(fields()[5].schema(), other.nPUm);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nPUp)) {
        this.nPUp = data().deepCopy(fields()[6].schema(), other.nPUp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nPUmean)) {
        this.nPUmean = data().deepCopy(fields()[7].schema(), other.nPUmean);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nPUmeanm)) {
        this.nPUmeanm = data().deepCopy(fields()[8].schema(), other.nPUmeanm);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nPUmeanp)) {
        this.nPUmeanp = data().deepCopy(fields()[9].schema(), other.nPUmeanp);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pvx)) {
        this.pvx = data().deepCopy(fields()[10].schema(), other.pvx);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.pvy)) {
        this.pvy = data().deepCopy(fields()[11].schema(), other.pvy);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pvz)) {
        this.pvz = data().deepCopy(fields()[12].schema(), other.pvz);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.bsx)) {
        this.bsx = data().deepCopy(fields()[13].schema(), other.bsx);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bsy)) {
        this.bsy = data().deepCopy(fields()[14].schema(), other.bsy);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.bsz)) {
        this.bsz = data().deepCopy(fields()[15].schema(), other.bsz);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pfMET)) {
        this.pfMET = data().deepCopy(fields()[16].schema(), other.pfMET);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.pfMETphi)) {
        this.pfMETphi = data().deepCopy(fields()[17].schema(), other.pfMETphi);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pfMETCov00)) {
        this.pfMETCov00 = data().deepCopy(fields()[18].schema(), other.pfMETCov00);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pfMETCov01)) {
        this.pfMETCov01 = data().deepCopy(fields()[19].schema(), other.pfMETCov01);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.pfMETCov11)) {
        this.pfMETCov11 = data().deepCopy(fields()[20].schema(), other.pfMETCov11);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.pfMETC)) {
        this.pfMETC = data().deepCopy(fields()[21].schema(), other.pfMETC);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pfMETCphi)) {
        this.pfMETCphi = data().deepCopy(fields()[22].schema(), other.pfMETCphi);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pfMETCCov00)) {
        this.pfMETCCov00 = data().deepCopy(fields()[23].schema(), other.pfMETCCov00);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pfMETCCov01)) {
        this.pfMETCCov01 = data().deepCopy(fields()[24].schema(), other.pfMETCCov01);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pfMETCCov11)) {
        this.pfMETCCov11 = data().deepCopy(fields()[25].schema(), other.pfMETCCov11);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.puppET)) {
        this.puppET = data().deepCopy(fields()[26].schema(), other.puppET);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.puppETphi)) {
        this.puppETphi = data().deepCopy(fields()[27].schema(), other.puppETphi);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.puppETCov00)) {
        this.puppETCov00 = data().deepCopy(fields()[28].schema(), other.puppETCov00);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.puppETCov01)) {
        this.puppETCov01 = data().deepCopy(fields()[29].schema(), other.puppETCov01);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.puppETCov11)) {
        this.puppETCov11 = data().deepCopy(fields()[30].schema(), other.puppETCov11);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.puppETC)) {
        this.puppETC = data().deepCopy(fields()[31].schema(), other.puppETC);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.puppETCphi)) {
        this.puppETCphi = data().deepCopy(fields()[32].schema(), other.puppETCphi);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.puppETCCov00)) {
        this.puppETCCov00 = data().deepCopy(fields()[33].schema(), other.puppETCCov00);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.puppETCCov01)) {
        this.puppETCCov01 = data().deepCopy(fields()[34].schema(), other.puppETCCov01);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.puppETCCov11)) {
        this.puppETCCov11 = data().deepCopy(fields()[35].schema(), other.puppETCCov11);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.alpacaMET)) {
        this.alpacaMET = data().deepCopy(fields()[36].schema(), other.alpacaMET);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.alpacaMETphi)) {
        this.alpacaMETphi = data().deepCopy(fields()[37].schema(), other.alpacaMETphi);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pcpMET)) {
        this.pcpMET = data().deepCopy(fields()[38].schema(), other.pcpMET);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.pcpMETphi)) {
        this.pcpMETphi = data().deepCopy(fields()[39].schema(), other.pcpMETphi);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.rhoIso)) {
        this.rhoIso = data().deepCopy(fields()[40].schema(), other.rhoIso);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.rhoJet)) {
        this.rhoJet = data().deepCopy(fields()[41].schema(), other.rhoJet);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.hasGoodPV)) {
        this.hasGoodPV = data().deepCopy(fields()[42].schema(), other.hasGoodPV);
        fieldSetFlags()[42] = true;
      }
    }

    /** Gets the value of the 'runNum' field */
    public java.lang.Long getRunNum() {
      return runNum;
    }
    
    /** Sets the value of the 'runNum' field */
    public baconhep.TEventInfo.Builder setRunNum(long value) {
      validate(fields()[0], value);
      this.runNum = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'runNum' field has been set */
    public boolean hasRunNum() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'runNum' field */
    public baconhep.TEventInfo.Builder clearRunNum() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'evtNum' field */
    public java.lang.Long getEvtNum() {
      return evtNum;
    }
    
    /** Sets the value of the 'evtNum' field */
    public baconhep.TEventInfo.Builder setEvtNum(long value) {
      validate(fields()[1], value);
      this.evtNum = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'evtNum' field has been set */
    public boolean hasEvtNum() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'evtNum' field */
    public baconhep.TEventInfo.Builder clearEvtNum() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lumiSec' field */
    public java.lang.Long getLumiSec() {
      return lumiSec;
    }
    
    /** Sets the value of the 'lumiSec' field */
    public baconhep.TEventInfo.Builder setLumiSec(long value) {
      validate(fields()[2], value);
      this.lumiSec = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'lumiSec' field has been set */
    public boolean hasLumiSec() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'lumiSec' field */
    public baconhep.TEventInfo.Builder clearLumiSec() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'metFilterFailBits' field */
    public java.lang.Long getMetFilterFailBits() {
      return metFilterFailBits;
    }
    
    /** Sets the value of the 'metFilterFailBits' field */
    public baconhep.TEventInfo.Builder setMetFilterFailBits(long value) {
      validate(fields()[3], value);
      this.metFilterFailBits = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'metFilterFailBits' field has been set */
    public boolean hasMetFilterFailBits() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'metFilterFailBits' field */
    public baconhep.TEventInfo.Builder clearMetFilterFailBits() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'nPU' field */
    public java.lang.Long getNPU() {
      return nPU;
    }
    
    /** Sets the value of the 'nPU' field */
    public baconhep.TEventInfo.Builder setNPU(long value) {
      validate(fields()[4], value);
      this.nPU = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'nPU' field has been set */
    public boolean hasNPU() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'nPU' field */
    public baconhep.TEventInfo.Builder clearNPU() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'nPUm' field */
    public java.lang.Long getNPUm() {
      return nPUm;
    }
    
    /** Sets the value of the 'nPUm' field */
    public baconhep.TEventInfo.Builder setNPUm(long value) {
      validate(fields()[5], value);
      this.nPUm = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'nPUm' field has been set */
    public boolean hasNPUm() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'nPUm' field */
    public baconhep.TEventInfo.Builder clearNPUm() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'nPUp' field */
    public java.lang.Long getNPUp() {
      return nPUp;
    }
    
    /** Sets the value of the 'nPUp' field */
    public baconhep.TEventInfo.Builder setNPUp(long value) {
      validate(fields()[6], value);
      this.nPUp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'nPUp' field has been set */
    public boolean hasNPUp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'nPUp' field */
    public baconhep.TEventInfo.Builder clearNPUp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'nPUmean' field */
    public java.lang.Float getNPUmean() {
      return nPUmean;
    }
    
    /** Sets the value of the 'nPUmean' field */
    public baconhep.TEventInfo.Builder setNPUmean(float value) {
      validate(fields()[7], value);
      this.nPUmean = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'nPUmean' field has been set */
    public boolean hasNPUmean() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'nPUmean' field */
    public baconhep.TEventInfo.Builder clearNPUmean() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'nPUmeanm' field */
    public java.lang.Float getNPUmeanm() {
      return nPUmeanm;
    }
    
    /** Sets the value of the 'nPUmeanm' field */
    public baconhep.TEventInfo.Builder setNPUmeanm(float value) {
      validate(fields()[8], value);
      this.nPUmeanm = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'nPUmeanm' field has been set */
    public boolean hasNPUmeanm() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'nPUmeanm' field */
    public baconhep.TEventInfo.Builder clearNPUmeanm() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'nPUmeanp' field */
    public java.lang.Float getNPUmeanp() {
      return nPUmeanp;
    }
    
    /** Sets the value of the 'nPUmeanp' field */
    public baconhep.TEventInfo.Builder setNPUmeanp(float value) {
      validate(fields()[9], value);
      this.nPUmeanp = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'nPUmeanp' field has been set */
    public boolean hasNPUmeanp() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'nPUmeanp' field */
    public baconhep.TEventInfo.Builder clearNPUmeanp() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'pvx' field */
    public java.lang.Float getPvx() {
      return pvx;
    }
    
    /** Sets the value of the 'pvx' field */
    public baconhep.TEventInfo.Builder setPvx(float value) {
      validate(fields()[10], value);
      this.pvx = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'pvx' field has been set */
    public boolean hasPvx() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'pvx' field */
    public baconhep.TEventInfo.Builder clearPvx() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'pvy' field */
    public java.lang.Float getPvy() {
      return pvy;
    }
    
    /** Sets the value of the 'pvy' field */
    public baconhep.TEventInfo.Builder setPvy(float value) {
      validate(fields()[11], value);
      this.pvy = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'pvy' field has been set */
    public boolean hasPvy() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'pvy' field */
    public baconhep.TEventInfo.Builder clearPvy() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'pvz' field */
    public java.lang.Float getPvz() {
      return pvz;
    }
    
    /** Sets the value of the 'pvz' field */
    public baconhep.TEventInfo.Builder setPvz(float value) {
      validate(fields()[12], value);
      this.pvz = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'pvz' field has been set */
    public boolean hasPvz() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'pvz' field */
    public baconhep.TEventInfo.Builder clearPvz() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'bsx' field */
    public java.lang.Float getBsx() {
      return bsx;
    }
    
    /** Sets the value of the 'bsx' field */
    public baconhep.TEventInfo.Builder setBsx(float value) {
      validate(fields()[13], value);
      this.bsx = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'bsx' field has been set */
    public boolean hasBsx() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'bsx' field */
    public baconhep.TEventInfo.Builder clearBsx() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'bsy' field */
    public java.lang.Float getBsy() {
      return bsy;
    }
    
    /** Sets the value of the 'bsy' field */
    public baconhep.TEventInfo.Builder setBsy(float value) {
      validate(fields()[14], value);
      this.bsy = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'bsy' field has been set */
    public boolean hasBsy() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'bsy' field */
    public baconhep.TEventInfo.Builder clearBsy() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'bsz' field */
    public java.lang.Float getBsz() {
      return bsz;
    }
    
    /** Sets the value of the 'bsz' field */
    public baconhep.TEventInfo.Builder setBsz(float value) {
      validate(fields()[15], value);
      this.bsz = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'bsz' field has been set */
    public boolean hasBsz() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'bsz' field */
    public baconhep.TEventInfo.Builder clearBsz() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'pfMET' field */
    public java.lang.Float getPfMET() {
      return pfMET;
    }
    
    /** Sets the value of the 'pfMET' field */
    public baconhep.TEventInfo.Builder setPfMET(float value) {
      validate(fields()[16], value);
      this.pfMET = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMET' field has been set */
    public boolean hasPfMET() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'pfMET' field */
    public baconhep.TEventInfo.Builder clearPfMET() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'pfMETphi' field */
    public java.lang.Float getPfMETphi() {
      return pfMETphi;
    }
    
    /** Sets the value of the 'pfMETphi' field */
    public baconhep.TEventInfo.Builder setPfMETphi(float value) {
      validate(fields()[17], value);
      this.pfMETphi = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETphi' field has been set */
    public boolean hasPfMETphi() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'pfMETphi' field */
    public baconhep.TEventInfo.Builder clearPfMETphi() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCov00' field */
    public java.lang.Float getPfMETCov00() {
      return pfMETCov00;
    }
    
    /** Sets the value of the 'pfMETCov00' field */
    public baconhep.TEventInfo.Builder setPfMETCov00(float value) {
      validate(fields()[18], value);
      this.pfMETCov00 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCov00' field has been set */
    public boolean hasPfMETCov00() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'pfMETCov00' field */
    public baconhep.TEventInfo.Builder clearPfMETCov00() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCov01' field */
    public java.lang.Float getPfMETCov01() {
      return pfMETCov01;
    }
    
    /** Sets the value of the 'pfMETCov01' field */
    public baconhep.TEventInfo.Builder setPfMETCov01(float value) {
      validate(fields()[19], value);
      this.pfMETCov01 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCov01' field has been set */
    public boolean hasPfMETCov01() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'pfMETCov01' field */
    public baconhep.TEventInfo.Builder clearPfMETCov01() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCov11' field */
    public java.lang.Float getPfMETCov11() {
      return pfMETCov11;
    }
    
    /** Sets the value of the 'pfMETCov11' field */
    public baconhep.TEventInfo.Builder setPfMETCov11(float value) {
      validate(fields()[20], value);
      this.pfMETCov11 = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCov11' field has been set */
    public boolean hasPfMETCov11() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'pfMETCov11' field */
    public baconhep.TEventInfo.Builder clearPfMETCov11() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'pfMETC' field */
    public java.lang.Float getPfMETC() {
      return pfMETC;
    }
    
    /** Sets the value of the 'pfMETC' field */
    public baconhep.TEventInfo.Builder setPfMETC(float value) {
      validate(fields()[21], value);
      this.pfMETC = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETC' field has been set */
    public boolean hasPfMETC() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'pfMETC' field */
    public baconhep.TEventInfo.Builder clearPfMETC() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCphi' field */
    public java.lang.Float getPfMETCphi() {
      return pfMETCphi;
    }
    
    /** Sets the value of the 'pfMETCphi' field */
    public baconhep.TEventInfo.Builder setPfMETCphi(float value) {
      validate(fields()[22], value);
      this.pfMETCphi = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCphi' field has been set */
    public boolean hasPfMETCphi() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'pfMETCphi' field */
    public baconhep.TEventInfo.Builder clearPfMETCphi() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCCov00' field */
    public java.lang.Float getPfMETCCov00() {
      return pfMETCCov00;
    }
    
    /** Sets the value of the 'pfMETCCov00' field */
    public baconhep.TEventInfo.Builder setPfMETCCov00(float value) {
      validate(fields()[23], value);
      this.pfMETCCov00 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCCov00' field has been set */
    public boolean hasPfMETCCov00() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'pfMETCCov00' field */
    public baconhep.TEventInfo.Builder clearPfMETCCov00() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCCov01' field */
    public java.lang.Float getPfMETCCov01() {
      return pfMETCCov01;
    }
    
    /** Sets the value of the 'pfMETCCov01' field */
    public baconhep.TEventInfo.Builder setPfMETCCov01(float value) {
      validate(fields()[24], value);
      this.pfMETCCov01 = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCCov01' field has been set */
    public boolean hasPfMETCCov01() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'pfMETCCov01' field */
    public baconhep.TEventInfo.Builder clearPfMETCCov01() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'pfMETCCov11' field */
    public java.lang.Float getPfMETCCov11() {
      return pfMETCCov11;
    }
    
    /** Sets the value of the 'pfMETCCov11' field */
    public baconhep.TEventInfo.Builder setPfMETCCov11(float value) {
      validate(fields()[25], value);
      this.pfMETCCov11 = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'pfMETCCov11' field has been set */
    public boolean hasPfMETCCov11() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'pfMETCCov11' field */
    public baconhep.TEventInfo.Builder clearPfMETCCov11() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'puppET' field */
    public java.lang.Float getPuppET() {
      return puppET;
    }
    
    /** Sets the value of the 'puppET' field */
    public baconhep.TEventInfo.Builder setPuppET(float value) {
      validate(fields()[26], value);
      this.puppET = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'puppET' field has been set */
    public boolean hasPuppET() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'puppET' field */
    public baconhep.TEventInfo.Builder clearPuppET() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'puppETphi' field */
    public java.lang.Float getPuppETphi() {
      return puppETphi;
    }
    
    /** Sets the value of the 'puppETphi' field */
    public baconhep.TEventInfo.Builder setPuppETphi(float value) {
      validate(fields()[27], value);
      this.puppETphi = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETphi' field has been set */
    public boolean hasPuppETphi() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'puppETphi' field */
    public baconhep.TEventInfo.Builder clearPuppETphi() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'puppETCov00' field */
    public java.lang.Float getPuppETCov00() {
      return puppETCov00;
    }
    
    /** Sets the value of the 'puppETCov00' field */
    public baconhep.TEventInfo.Builder setPuppETCov00(float value) {
      validate(fields()[28], value);
      this.puppETCov00 = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCov00' field has been set */
    public boolean hasPuppETCov00() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'puppETCov00' field */
    public baconhep.TEventInfo.Builder clearPuppETCov00() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'puppETCov01' field */
    public java.lang.Float getPuppETCov01() {
      return puppETCov01;
    }
    
    /** Sets the value of the 'puppETCov01' field */
    public baconhep.TEventInfo.Builder setPuppETCov01(float value) {
      validate(fields()[29], value);
      this.puppETCov01 = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCov01' field has been set */
    public boolean hasPuppETCov01() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'puppETCov01' field */
    public baconhep.TEventInfo.Builder clearPuppETCov01() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'puppETCov11' field */
    public java.lang.Float getPuppETCov11() {
      return puppETCov11;
    }
    
    /** Sets the value of the 'puppETCov11' field */
    public baconhep.TEventInfo.Builder setPuppETCov11(float value) {
      validate(fields()[30], value);
      this.puppETCov11 = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCov11' field has been set */
    public boolean hasPuppETCov11() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'puppETCov11' field */
    public baconhep.TEventInfo.Builder clearPuppETCov11() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'puppETC' field */
    public java.lang.Float getPuppETC() {
      return puppETC;
    }
    
    /** Sets the value of the 'puppETC' field */
    public baconhep.TEventInfo.Builder setPuppETC(float value) {
      validate(fields()[31], value);
      this.puppETC = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETC' field has been set */
    public boolean hasPuppETC() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'puppETC' field */
    public baconhep.TEventInfo.Builder clearPuppETC() {
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'puppETCphi' field */
    public java.lang.Float getPuppETCphi() {
      return puppETCphi;
    }
    
    /** Sets the value of the 'puppETCphi' field */
    public baconhep.TEventInfo.Builder setPuppETCphi(float value) {
      validate(fields()[32], value);
      this.puppETCphi = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCphi' field has been set */
    public boolean hasPuppETCphi() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'puppETCphi' field */
    public baconhep.TEventInfo.Builder clearPuppETCphi() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'puppETCCov00' field */
    public java.lang.Float getPuppETCCov00() {
      return puppETCCov00;
    }
    
    /** Sets the value of the 'puppETCCov00' field */
    public baconhep.TEventInfo.Builder setPuppETCCov00(float value) {
      validate(fields()[33], value);
      this.puppETCCov00 = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCCov00' field has been set */
    public boolean hasPuppETCCov00() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'puppETCCov00' field */
    public baconhep.TEventInfo.Builder clearPuppETCCov00() {
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'puppETCCov01' field */
    public java.lang.Float getPuppETCCov01() {
      return puppETCCov01;
    }
    
    /** Sets the value of the 'puppETCCov01' field */
    public baconhep.TEventInfo.Builder setPuppETCCov01(float value) {
      validate(fields()[34], value);
      this.puppETCCov01 = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCCov01' field has been set */
    public boolean hasPuppETCCov01() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'puppETCCov01' field */
    public baconhep.TEventInfo.Builder clearPuppETCCov01() {
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'puppETCCov11' field */
    public java.lang.Float getPuppETCCov11() {
      return puppETCCov11;
    }
    
    /** Sets the value of the 'puppETCCov11' field */
    public baconhep.TEventInfo.Builder setPuppETCCov11(float value) {
      validate(fields()[35], value);
      this.puppETCCov11 = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'puppETCCov11' field has been set */
    public boolean hasPuppETCCov11() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'puppETCCov11' field */
    public baconhep.TEventInfo.Builder clearPuppETCCov11() {
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'alpacaMET' field */
    public java.lang.Float getAlpacaMET() {
      return alpacaMET;
    }
    
    /** Sets the value of the 'alpacaMET' field */
    public baconhep.TEventInfo.Builder setAlpacaMET(float value) {
      validate(fields()[36], value);
      this.alpacaMET = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'alpacaMET' field has been set */
    public boolean hasAlpacaMET() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'alpacaMET' field */
    public baconhep.TEventInfo.Builder clearAlpacaMET() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'alpacaMETphi' field */
    public java.lang.Float getAlpacaMETphi() {
      return alpacaMETphi;
    }
    
    /** Sets the value of the 'alpacaMETphi' field */
    public baconhep.TEventInfo.Builder setAlpacaMETphi(float value) {
      validate(fields()[37], value);
      this.alpacaMETphi = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'alpacaMETphi' field has been set */
    public boolean hasAlpacaMETphi() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'alpacaMETphi' field */
    public baconhep.TEventInfo.Builder clearAlpacaMETphi() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'pcpMET' field */
    public java.lang.Float getPcpMET() {
      return pcpMET;
    }
    
    /** Sets the value of the 'pcpMET' field */
    public baconhep.TEventInfo.Builder setPcpMET(float value) {
      validate(fields()[38], value);
      this.pcpMET = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'pcpMET' field has been set */
    public boolean hasPcpMET() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'pcpMET' field */
    public baconhep.TEventInfo.Builder clearPcpMET() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'pcpMETphi' field */
    public java.lang.Float getPcpMETphi() {
      return pcpMETphi;
    }
    
    /** Sets the value of the 'pcpMETphi' field */
    public baconhep.TEventInfo.Builder setPcpMETphi(float value) {
      validate(fields()[39], value);
      this.pcpMETphi = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'pcpMETphi' field has been set */
    public boolean hasPcpMETphi() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'pcpMETphi' field */
    public baconhep.TEventInfo.Builder clearPcpMETphi() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'rhoIso' field */
    public java.lang.Float getRhoIso() {
      return rhoIso;
    }
    
    /** Sets the value of the 'rhoIso' field */
    public baconhep.TEventInfo.Builder setRhoIso(float value) {
      validate(fields()[40], value);
      this.rhoIso = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'rhoIso' field has been set */
    public boolean hasRhoIso() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'rhoIso' field */
    public baconhep.TEventInfo.Builder clearRhoIso() {
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'rhoJet' field */
    public java.lang.Float getRhoJet() {
      return rhoJet;
    }
    
    /** Sets the value of the 'rhoJet' field */
    public baconhep.TEventInfo.Builder setRhoJet(float value) {
      validate(fields()[41], value);
      this.rhoJet = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'rhoJet' field has been set */
    public boolean hasRhoJet() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'rhoJet' field */
    public baconhep.TEventInfo.Builder clearRhoJet() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'hasGoodPV' field */
    public java.lang.Boolean getHasGoodPV() {
      return hasGoodPV;
    }
    
    /** Sets the value of the 'hasGoodPV' field */
    public baconhep.TEventInfo.Builder setHasGoodPV(boolean value) {
      validate(fields()[42], value);
      this.hasGoodPV = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'hasGoodPV' field has been set */
    public boolean hasHasGoodPV() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'hasGoodPV' field */
    public baconhep.TEventInfo.Builder clearHasGoodPV() {
      fieldSetFlags()[42] = false;
      return this;
    }

    @Override
    public TEventInfo build() {
      try {
        TEventInfo record = new TEventInfo();
        record.runNum = fieldSetFlags()[0] ? this.runNum : (java.lang.Long) defaultValue(fields()[0]);
        record.evtNum = fieldSetFlags()[1] ? this.evtNum : (java.lang.Long) defaultValue(fields()[1]);
        record.lumiSec = fieldSetFlags()[2] ? this.lumiSec : (java.lang.Long) defaultValue(fields()[2]);
        record.metFilterFailBits = fieldSetFlags()[3] ? this.metFilterFailBits : (java.lang.Long) defaultValue(fields()[3]);
        record.nPU = fieldSetFlags()[4] ? this.nPU : (java.lang.Long) defaultValue(fields()[4]);
        record.nPUm = fieldSetFlags()[5] ? this.nPUm : (java.lang.Long) defaultValue(fields()[5]);
        record.nPUp = fieldSetFlags()[6] ? this.nPUp : (java.lang.Long) defaultValue(fields()[6]);
        record.nPUmean = fieldSetFlags()[7] ? this.nPUmean : (java.lang.Float) defaultValue(fields()[7]);
        record.nPUmeanm = fieldSetFlags()[8] ? this.nPUmeanm : (java.lang.Float) defaultValue(fields()[8]);
        record.nPUmeanp = fieldSetFlags()[9] ? this.nPUmeanp : (java.lang.Float) defaultValue(fields()[9]);
        record.pvx = fieldSetFlags()[10] ? this.pvx : (java.lang.Float) defaultValue(fields()[10]);
        record.pvy = fieldSetFlags()[11] ? this.pvy : (java.lang.Float) defaultValue(fields()[11]);
        record.pvz = fieldSetFlags()[12] ? this.pvz : (java.lang.Float) defaultValue(fields()[12]);
        record.bsx = fieldSetFlags()[13] ? this.bsx : (java.lang.Float) defaultValue(fields()[13]);
        record.bsy = fieldSetFlags()[14] ? this.bsy : (java.lang.Float) defaultValue(fields()[14]);
        record.bsz = fieldSetFlags()[15] ? this.bsz : (java.lang.Float) defaultValue(fields()[15]);
        record.pfMET = fieldSetFlags()[16] ? this.pfMET : (java.lang.Float) defaultValue(fields()[16]);
        record.pfMETphi = fieldSetFlags()[17] ? this.pfMETphi : (java.lang.Float) defaultValue(fields()[17]);
        record.pfMETCov00 = fieldSetFlags()[18] ? this.pfMETCov00 : (java.lang.Float) defaultValue(fields()[18]);
        record.pfMETCov01 = fieldSetFlags()[19] ? this.pfMETCov01 : (java.lang.Float) defaultValue(fields()[19]);
        record.pfMETCov11 = fieldSetFlags()[20] ? this.pfMETCov11 : (java.lang.Float) defaultValue(fields()[20]);
        record.pfMETC = fieldSetFlags()[21] ? this.pfMETC : (java.lang.Float) defaultValue(fields()[21]);
        record.pfMETCphi = fieldSetFlags()[22] ? this.pfMETCphi : (java.lang.Float) defaultValue(fields()[22]);
        record.pfMETCCov00 = fieldSetFlags()[23] ? this.pfMETCCov00 : (java.lang.Float) defaultValue(fields()[23]);
        record.pfMETCCov01 = fieldSetFlags()[24] ? this.pfMETCCov01 : (java.lang.Float) defaultValue(fields()[24]);
        record.pfMETCCov11 = fieldSetFlags()[25] ? this.pfMETCCov11 : (java.lang.Float) defaultValue(fields()[25]);
        record.puppET = fieldSetFlags()[26] ? this.puppET : (java.lang.Float) defaultValue(fields()[26]);
        record.puppETphi = fieldSetFlags()[27] ? this.puppETphi : (java.lang.Float) defaultValue(fields()[27]);
        record.puppETCov00 = fieldSetFlags()[28] ? this.puppETCov00 : (java.lang.Float) defaultValue(fields()[28]);
        record.puppETCov01 = fieldSetFlags()[29] ? this.puppETCov01 : (java.lang.Float) defaultValue(fields()[29]);
        record.puppETCov11 = fieldSetFlags()[30] ? this.puppETCov11 : (java.lang.Float) defaultValue(fields()[30]);
        record.puppETC = fieldSetFlags()[31] ? this.puppETC : (java.lang.Float) defaultValue(fields()[31]);
        record.puppETCphi = fieldSetFlags()[32] ? this.puppETCphi : (java.lang.Float) defaultValue(fields()[32]);
        record.puppETCCov00 = fieldSetFlags()[33] ? this.puppETCCov00 : (java.lang.Float) defaultValue(fields()[33]);
        record.puppETCCov01 = fieldSetFlags()[34] ? this.puppETCCov01 : (java.lang.Float) defaultValue(fields()[34]);
        record.puppETCCov11 = fieldSetFlags()[35] ? this.puppETCCov11 : (java.lang.Float) defaultValue(fields()[35]);
        record.alpacaMET = fieldSetFlags()[36] ? this.alpacaMET : (java.lang.Float) defaultValue(fields()[36]);
        record.alpacaMETphi = fieldSetFlags()[37] ? this.alpacaMETphi : (java.lang.Float) defaultValue(fields()[37]);
        record.pcpMET = fieldSetFlags()[38] ? this.pcpMET : (java.lang.Float) defaultValue(fields()[38]);
        record.pcpMETphi = fieldSetFlags()[39] ? this.pcpMETphi : (java.lang.Float) defaultValue(fields()[39]);
        record.rhoIso = fieldSetFlags()[40] ? this.rhoIso : (java.lang.Float) defaultValue(fields()[40]);
        record.rhoJet = fieldSetFlags()[41] ? this.rhoJet : (java.lang.Float) defaultValue(fields()[41]);
        record.hasGoodPV = fieldSetFlags()[42] ? this.hasGoodPV : (java.lang.Boolean) defaultValue(fields()[42]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
